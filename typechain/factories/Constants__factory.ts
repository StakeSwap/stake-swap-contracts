/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Constants, ConstantsInterface } from "../Constants";

const _abi = [
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_rETH_ETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_frxETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_stETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610557806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063be78e8d9116100a2578063cbc74de711610071578063cbc74de71461011b578063ce069614146101b9578063ebdfda5e146101c1578063f2cd3a12146101c9578063f781b24e146101d157600080fd5b8063be78e8d914610181578063c1fe3e48146101a1578063c9ac8c8e146101a9578063ca8aa0e4146101b157600080fd5b8063565d3e6e116100e9578063565d3e6e146101795780635a33bbbe14610181578063698e079614610189578063aa6430c614610191578063ad5c46481461019957600080fd5b8063020b627d1461011b57806323c34a641461013b5780634aa07e64146101515780634bc0dcb614610171575b600080fd5b6101236101d9565b604051600f9190910b81526020015b60405180910390f35b610143610228565b604051908152602001610132565b610159610257565b6040516001600160a01b039091168152602001610132565b61015961029b565b6101596102be565b610123610302565b610159610312565b610159610335565b610159610358565b61015961039c565b6101596103e0565b610159610403565b610159610447565b61015961048b565b6101436104cf565b6101596104fe565b6000466001036101e95750600190565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b604482015260640160405180910390fd5b6000466001036101e957507f1e19cf2d73a72ef1332c882f20534b6519be027600020000000000000000011290565b60004660010361027a5750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b466005036101e95750736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b6000466001036101e9575073dc24316b9ae028f1497c275eb9192a3ea0f6702290565b6000466001036102e15750735e8422345238f34275888049021821e8e08caa1f90565b466005036101e95750733e04888b1c07a9805861c19551f7ed53145bd8d490565b6000466001036101e95750600090565b6000466001036101e957507306325440d014e39736583c165c2963ba99faf14e90565b6000466001036101e9575073a1f8a6807c402e4a15ef4eba36528a3fed24e57790565b60004660010361037b575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b466005036101e9575073b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b6000466001036103bf575073ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b466005036101e95750731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b6000466001036102e1575073ac3e018457b222d93114458476f3e3416abbe38f90565b600046600103610426575073ae78736cd615f374d3085123a210448e74fc639390565b466005036101e9575073ae78736cd615f374d3085123a210448e74fc639390565b60004660010361046a575073ba12222222228d8ba445958a75a0704d566bf2c890565b466005036101e9575073ba12222222228d8ba445958a75a0704d566bf2c890565b6000466001036104ae575073bafa44efe7901e04e39dad13167d089c559c113890565b466005036101e95750736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b6000466001036101e957507f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b6000466001036101e9575073f43211935c781d5ca1a41d2041f397b8a7366c7a9056fea264697066735822122084d646890c8628842ca1c04250dc3dc7815acc4ee8307ca6d586ca878f6fd70764736f6c63430008110033";

type ConstantsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConstantsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Constants__factory extends ContractFactory {
  constructor(...args: ConstantsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Constants> {
    return super.deploy(overrides || {}) as Promise<Constants>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Constants {
    return super.attach(address) as Constants;
  }
  override connect(signer: Signer): Constants__factory {
    return super.connect(signer) as Constants__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConstantsInterface {
    return new utils.Interface(_abi) as ConstantsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Constants {
    return new Contract(address, _abi, signerOrProvider) as Constants;
  }
}
