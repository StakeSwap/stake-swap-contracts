/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { FraxAdapter, FraxAdapterInterface } from "../FraxAdapter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adaptorName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "buyToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "token2",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040524260805234801561001457600080fd5b506001600055608051611196610032600039600050506111966000f3fe60806040526004361061012e5760003560e01c8063aaf5eb68116100ab578063c9ac8c8e1161006f578063c9ac8c8e1461036a578063ca8aa0e41461037f578063ce06961414610394578063d0e30db0146103a9578063ebdfda5e146103b1578063f2cd3a12146103c657600080fd5b8063aaf5eb68146102fb578063ad5c464814610317578063b51459fe1461032c578063c1fe3e4814610340578063c89d5b8b1461035557600080fd5b8063565d3e6e116100f2578063565d3e6e14610257578063698e07961461026c5780638c9adb2d14610281578063a4821719146102b4578063aa6ca808146102bc57600080fd5b80632397e4d7146101925780632e1a7d4d146101c557806339443b8e146101e55780634aa07e64146102155780634bc0dcb61461024257600080fd5b3661018d5761013b6103db565b6001600160a01b0316336001600160a01b03161461018b5760405162461bcd60e51b815260206004820152600860248201526709c9ea840ae8aa8960c31b60448201526064015b60405180910390fd5b005b600080fd5b34801561019e57600080fd5b506101b26101ad366004610fb3565b61045a565b6040519081526020015b60405180910390f35b3480156101d157600080fd5b506101b26101e0366004610fb3565b6104da565b3480156101f157600080fd5b50610205610200366004610fb3565b6105a2565b60405190151581526020016101bc565b34801561022157600080fd5b5061022a610639565b6040516001600160a01b0390911681526020016101bc565b34801561024e57600080fd5b5061022a61067d565b34801561026357600080fd5b5061022a6106a0565b34801561027857600080fd5b5061022a6106e4565b34801561028d57600080fd5b5060408051808201825260048152630cce4c2f60e31b602082015290516101bc9190610ff0565b6101b2610707565b3480156102c857600080fd5b506102d1610788565b604080516001600160a01b03948516815292841660208401529216918101919091526060016101bc565b34801561030757600080fd5b506101b2670de0b6b3a764000081565b34801561032357600080fd5b5061022a6103db565b34801561033857600080fd5b506000610205565b34801561034c57600080fd5b5061022a6107a9565b34801561036157600080fd5b506101b26107ed565b34801561037657600080fd5b5061022a610980565b34801561038b57600080fd5b5061022a6109a3565b3480156103a057600080fd5b5061022a6109e7565b6101b2610a2b565b3480156103bd57600080fd5b5061022a610b24565b3480156103d257600080fd5b506101b2610b68565b6000466001036103fe575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b4660050361041f575073b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b6044820152606401610182565b6000610464610b97565b600082116104a25760405162461bcd60e51b815260206004820152600b60248201526a16915493c8105353d5539560aa1b6044820152606401610182565b60006104ac610788565b505090506104bc81333086610bf0565b60006104c784610c61565b925050506104d56001600055565b919050565b60006104e4610b97565b600082116105225760405162461bcd60e51b815260206004820152600b60248201526a16915493c8105353d5539560aa1b6044820152606401610182565b61052b826105a2565b6105685760405162461bcd60e51b815260206004820152600e60248201526d10d0539393d50811115413d4d25560921b6044820152606401610182565b60405162461bcd60e51b815260206004820152600f60248201526e43414e4e4f5420574954484452415760881b6044820152606401610182565b6000816000036105b457506000919050565b60006105be610b24565b9050806001600160a01b031663b6d24f186040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106229190611023565b156106305750600092915050565b50600192915050565b60004660010361065c5750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b4660050361041f5750736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b60004660010361041f575073dc24316b9ae028f1497c275eb9192a3ea0f6702290565b6000466001036106c35750735e8422345238f34275888049021821e8e08caa1f90565b4660050361041f5750733e04888b1c07a9805861c19551f7ed53145bd8d490565b60004660010361041f57507306325440d014e39736583c165c2963ba99faf14e90565b6000610711610b97565b600034116107535760405162461bcd60e51b815260206004820152600f60248201526e16915493c811551208105353d55395608a1b6044820152606401610182565b600061075d610c61565b90506000610769610788565b50509050610778813384610c9d565b5090506107856001600055565b90565b6000806000610795610980565b925061079f6106a0565b9293600092509050565b6000466001036107cc575073ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b4660050361041f5750731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b6000806107f8610980565b90506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561083a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085e919061104c565b9050806000036108715760009250505090565b80826001600160a01b0316636fcf5e5f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d49190611065565b63ffffffff16836001600160a01b031663bafedcaa6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c919061108b565b61094a906301e187e06110b4565b610954919061110a565b61096690670de0b6b3a76400006110b4565b6001600160c01b03166109799190611130565b9250505090565b6000466001036106c3575073ac3e018457b222d93114458476f3e3416abbe38f90565b6000466001036109c6575073ae78736cd615f374d3085123a210448e74fc639390565b4660050361041f575073ae78736cd615f374d3085123a210448e74fc639390565b600046600103610a0a575073ba12222222228d8ba445958a75a0704d566bf2c890565b4660050361041f575073ba12222222228d8ba445958a75a0704d566bf2c890565b6000610a35610b97565b60003411610a775760405162461bcd60e51b815260206004820152600f60248201526e16915493c811551208105353d55395608a1b6044820152606401610182565b610a80346105a2565b610abd5760405162461bcd60e51b815260206004820152600e60248201526d10d0539393d50811115413d4d25560921b6044820152606401610182565b6000610ac7610cd2565b90506000610ad3610788565b50509050610ae2813384610c9d565b60405182815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a25090506107856001600055565b600046600103610b47575073bafa44efe7901e04e39dad13167d089c559c113890565b4660050361041f5750736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b60004660010361041f57507f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b600260005403610be95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610182565b6002600055565b6040516001600160a01b0380851660248301528316604482015260648101829052610c5b9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610d51565b50505050565b60405162461bcd60e51b815260206004820152600e60248201526d1393d517d253541311535153951160921b6044820152600090606401610182565b6040516001600160a01b038316602482015260448101829052610ccd90849063a9059cbb60e01b90606401610c24565b505050565b600080610cdd610b24565b604051634dcd454760e01b81523060048201526001600160a01b039190911690634dcd454790349060240160206040518083038185885af1158015610d26573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610d4b919061104c565b92915050565b6000610da6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e239092919063ffffffff16565b805190915015610ccd5780806020019051810190610dc49190611023565b610ccd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610182565b6060610e328484600085610e3a565b949350505050565b606082471015610e9b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610182565b600080866001600160a01b03168587604051610eb79190611144565b60006040518083038185875af1925050503d8060008114610ef4576040519150601f19603f3d011682016040523d82523d6000602084013e610ef9565b606091505b5091509150610f0a87838387610f15565b979650505050505050565b60608315610f84578251600003610f7d576001600160a01b0385163b610f7d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610182565b5081610e32565b610e328383815115610f995781518083602001fd5b8060405162461bcd60e51b81526004016101829190610ff0565b600060208284031215610fc557600080fd5b5035919050565b60005b83811015610fe7578181015183820152602001610fcf565b50506000910152565b602081526000825180602084015261100f816040850160208701610fcc565b601f01601f19169190910160400192915050565b60006020828403121561103557600080fd5b8151801515811461104557600080fd5b9392505050565b60006020828403121561105e57600080fd5b5051919050565b60006020828403121561107757600080fd5b815163ffffffff8116811461104557600080fd5b60006020828403121561109d57600080fd5b81516001600160c01b038116811461104557600080fd5b6001600160c01b038281168282168181028316929181158285048214176110eb57634e487b7160e01b600052601160045260246000fd5b50505092915050565b634e487b7160e01b600052601260045260246000fd5b60006001600160c01b0383811680611124576111246110f4565b92169190910492915050565b60008261113f5761113f6110f4565b500490565b60008251611156818460208701610fcc565b919091019291505056fea26469706673582212207746309ac83700ec1f14fdccb31c9bf0e0be927b32cd3da42654aaeb31a5935764736f6c63430008110033";

type FraxAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FraxAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FraxAdapter__factory extends ContractFactory {
  constructor(...args: FraxAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FraxAdapter> {
    return super.deploy(overrides || {}) as Promise<FraxAdapter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FraxAdapter {
    return super.attach(address) as FraxAdapter;
  }
  override connect(signer: Signer): FraxAdapter__factory {
    return super.connect(signer) as FraxAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FraxAdapterInterface {
    return new utils.Interface(_abi) as FraxAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FraxAdapter {
    return new Contract(address, _abi, signerOrProvider) as FraxAdapter;
  }
}
