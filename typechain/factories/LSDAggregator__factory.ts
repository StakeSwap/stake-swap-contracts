/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { LSDAggregator, LSDAggregatorInterface } from "../LSDAggregator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract BaseAdaptor[]",
        name: "_adaptors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_weights",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_rETH_ETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_frxETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_stETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "adaptors",
    outputs: [
      {
        internalType: "contract BaseAdaptor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract BaseAdaptor",
        name: "",
        type: "address",
      },
    ],
    name: "isAdaptor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "previewRedeem",
    outputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract BaseAdaptor[]",
        name: "_adaptors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_weights",
        type: "uint256[]",
      },
    ],
    name: "setAdaptors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract BaseAdaptor[]",
        name: "_adaptors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_weights",
        type: "uint256[]",
      },
    ],
    name: "setWeights",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract BaseAdaptor",
        name: "",
        type: "address",
      },
    ],
    name: "weights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002fd438038062002fd48339810160408190526200003491620006b3565b6040518060400160405280601681526020017f41676772656761746564205374616b696e672045544800000000000000000000815250604051806040016040528060058152602001640c2ca8aa8960db1b815250620000a26200009c6200016260201b60201c565b62000166565b600180556005620000b483826200081f565b506006620000c382826200081f565b505050620000d88282620001b660201b60201c565b620000e2620004ce565b60405163095ea7b360e01b815230600482015260001960248201526001600160a01b03919091169063095ea7b3906044016020604051808303816000875af115801562000133573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001599190620008eb565b5050506200097a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051825114620001fe5760405162461bcd60e51b815260206004820152600e60248201526d092dcecc2d8d2c84098cadccee8d60931b60448201526064015b60405180910390fd5b60005b600754811015620002f75760006007828154811062000224576200022462000916565b60009182526020808320909101546001600160a01b0316808352600882526040808420805460ff19169055600990925290822091909155905062000267620004ce565b60405163095ea7b360e01b81526001600160a01b03838116600483015260006024830152919091169063095ea7b3906044016020604051808303816000875af1158015620002b9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002df9190620008eb565b50508080620002ee9062000942565b91505062000201565b5081516200030d90600790602085019062000550565b506000805b83518110156200047557600084828151811062000333576200033362000916565b6020908102919091018101516001600160a01b038116600090815260089092526040909120805460ff1916600117905584519091508490839081106200037d576200037d62000916565b602002602001015160096000836001600160a01b03166001600160a01b0316815260200190815260200160002081905550838281518110620003c357620003c362000916565b602002602001015183620003d891906200095e565b9250620003e4620004ce565b60405163095ea7b360e01b81526001600160a01b0383811660048301526000196024830152919091169063095ea7b3906044016020604051808303816000875af115801562000437573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200045d9190620008eb565b505080806200046c9062000942565b91505062000312565b506127108114620004c95760405162461bcd60e51b815260206004820152601360248201527f494e56414c49445f44454e4f4d494e41544f52000000000000000000000000006044820152606401620001f5565b505050565b600046600103620004f2575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b4660050362000514575073b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b6044820152606401620001f5565b828054828255906000526020600020908101928215620005a8579160200282015b82811115620005a857825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000571565b50620005b6929150620005ba565b5090565b5b80821115620005b65760008155600101620005bb565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620006125762000612620005d1565b604052919050565b60006001600160401b03821115620006365762000636620005d1565b5060051b60200190565b600082601f8301126200065257600080fd5b815160206200066b62000665836200061a565b620005e7565b82815260059290921b840181019181810190868411156200068b57600080fd5b8286015b84811015620006a857805183529183019183016200068f565b509695505050505050565b60008060408385031215620006c757600080fd5b82516001600160401b0380821115620006df57600080fd5b818501915085601f830112620006f457600080fd5b815160206200070762000665836200061a565b82815260059290921b840181019181810190898411156200072757600080fd5b948201945b838610156200075e5785516001600160a01b03811681146200074e5760008081fd5b825294820194908201906200072c565b918801519196509093505050808211156200077857600080fd5b50620007878582860162000640565b9150509250929050565b600181811c90821680620007a657607f821691505b602082108103620007c757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004c957600081815260208120601f850160051c81016020861015620007f65750805b601f850160051c820191505b81811015620008175782815560010162000802565b505050505050565b81516001600160401b038111156200083b576200083b620005d1565b62000853816200084c845462000791565b84620007cd565b602080601f8311600181146200088b5760008415620008725750858301515b600019600386901b1c1916600185901b17855562000817565b600085815260208120601f198616915b82811015620008bc578886015182559484019460019091019084016200089b565b5085821015620008db5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620008fe57600080fd5b815180151581146200090f57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016200095757620009576200092c565b5060010190565b808201808211156200097457620009746200092c565b92915050565b61264a806200098a6000396000f3fe60806040526004361061023f5760003560e01c806391c7a6fc1161012e578063ca8aa0e4116100ab578063dd62ed3e1161006f578063dd62ed3e1461061e578063ebdfda5e1461063e578063f2cd3a1214610653578063f2fde38b14610668578063f781b24e1461068857600080fd5b8063ca8aa0e4146105cc578063cbc74de71461024b578063ce069614146105e1578063d0e30db0146105f6578063db006a75146105fe57600080fd5b8063aa6430c6116100f2578063aa6430c614610578578063ad5c46481461058d578063be78e8d914610421578063c1fe3e48146105a2578063c9ac8c8e146105b757600080fd5b806391c7a6fc146104d657806395d89b41146104f6578063a457c2d71461050b578063a7cac8461461052b578063a9059cbb1461055857600080fd5b80634aa07e64116101bc578063698e079611610180578063698e0796146104365780636a43ce221461044b57806370a082311461046d578063715018a6146104a35780638da5cb5b146104b857600080fd5b80634aa07e64146103c25780634bc0dcb6146103d75780634cdad506146103ec578063565d3e6e1461040c5780635a33bbbe1461042157600080fd5b806323c34a641161020357806323c34a6414610309578063313ce5671461031e57806331c3584b1461033a57806335d2ce271461037257806339509351146103a257600080fd5b8063020b627d1461024b57806306fdde0314610278578063095ea7b31461029a57806318160ddd146102ca57806323b872dd146102e957600080fd5b3661024657005b600080fd5b34801561025757600080fd5b5061026061069d565b604051600f9190910b81526020015b60405180910390f35b34801561028457600080fd5b5061028d6106ed565b60405161026f91906122e0565b3480156102a657600080fd5b506102ba6102b5366004612328565b61077f565b604051901515815260200161026f565b3480156102d657600080fd5b506004545b60405190815260200161026f565b3480156102f557600080fd5b506102ba610304366004612354565b610799565b34801561031557600080fd5b506102db6107bd565b34801561032a57600080fd5b506040516012815260200161026f565b34801561034657600080fd5b5061035a610355366004612395565b6107ec565b6040516001600160a01b03909116815260200161026f565b34801561037e57600080fd5b506102ba61038d3660046123ae565b60086020526000908152604090205460ff1681565b3480156103ae57600080fd5b506102ba6103bd366004612328565b610816565b3480156103ce57600080fd5b5061035a610838565b3480156103e357600080fd5b5061035a61087c565b3480156103f857600080fd5b506102db610407366004612395565b61089f565b34801561041857600080fd5b5061035a610a72565b34801561042d57600080fd5b50610260610ab6565b34801561044257600080fd5b5061035a610ac6565b34801561045757600080fd5b5061046b61046636600461241e565b610ae9565b005b34801561047957600080fd5b506102db6104883660046123ae565b6001600160a01b031660009081526002602052604090205490565b3480156104af57600080fd5b5061046b610b64565b3480156104c457600080fd5b506000546001600160a01b031661035a565b3480156104e257600080fd5b5061046b6104f136600461241e565b610b78565b34801561050257600080fd5b5061028d610d12565b34801561051757600080fd5b506102ba610526366004612328565b610d21565b34801561053757600080fd5b506102db6105463660046123ae565b60096020526000908152604090205481565b34801561056457600080fd5b506102ba610573366004612328565b610d9c565b34801561058457600080fd5b5061035a610daa565b34801561059957600080fd5b5061035a610dcd565b3480156105ae57600080fd5b5061035a610e11565b3480156105c357600080fd5b5061035a610e55565b3480156105d857600080fd5b5061035a610e78565b3480156105ed57600080fd5b5061035a610ebc565b6102db610f00565b34801561060a57600080fd5b506102db610619366004612395565b611181565b34801561062a57600080fd5b506102db61063936600461248a565b6114a9565b34801561064a57600080fd5b5061035a6114d4565b34801561065f57600080fd5b506102db611518565b34801561067457600080fd5b5061046b6106833660046123ae565b611547565b34801561069457600080fd5b5061035a6115c0565b6000466001036106ad5750600190565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b60448201526064015b60405180910390fd5b6060600580546106fc906124c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610728906124c3565b80156107755780601f1061074a57610100808354040283529160200191610775565b820191906000526020600020905b81548152906001019060200180831161075857829003601f168201915b5050505050905090565b60003361078d8185856115e3565b60019150505b92915050565b6000336107a7858285611707565b6107b285858561177b565b506001949350505050565b6000466001036106ad57507f1e19cf2d73a72ef1332c882f20534b6519be027600020000000000000000011290565b600781815481106107fc57600080fd5b6000918252602090912001546001600160a01b0316905081565b60003361078d81858561082983836114a9565b6108339190612513565b6115e3565b60004660010361085b5750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b466005036106ad5750736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b6000466001036106ad575073dc24316b9ae028f1497c275eb9192a3ea0f6702290565b6000816000036108b157506000919050565b60006108bc60045490565b905060005b600754811015610a6b576000600782815481106108e0576108e0612526565b60009182526020822001546040805163154d950160e31b815281516001600160a01b039093169450849263aa6ca808926004808401939192918290030181865afa158015610932573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610956919061253c565b6040516370a0823160e01b815230600482015290925060009150859088906001600160a01b038516906370a0823190602401602060405180830381865afa1580156109a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c9919061256b565b6109d39190612584565b6109dd919061259b565b60405163ef46b2ab60e01b8152600481018290529091506001600160a01b0384169063ef46b2ab90602401602060405180830381865afa158015610a25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a49919061256b565b610a539087612513565b95505050508080610a63906125bd565b9150506108c1565b5050919050565b600046600103610a955750735e8422345238f34275888049021821e8e08caa1f90565b466005036106ad5750733e04888b1c07a9805861c19551f7ed53145bd8d490565b6000466001036106ad5750600090565b6000466001036106ad57507306325440d014e39736583c165c2963ba99faf14e90565b610af1611926565b610b5e8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060408051602080880282810182019093528782529093508792508691829185019084908082843760009201919091525061198092505050565b50505050565b610b6c611926565b610b766000611c64565b565b610b80611926565b6007548314610bc35760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106e4565b6000805b84811015610cc3576000868683818110610be357610be3612526565b9050602002016020810190610bf891906123ae565b6001600160a01b03811660009081526008602052604090205490915060ff16610c515760405162461bcd60e51b815260206004820152600b60248201526a2727aa2fa0a220a82a27a960a91b60448201526064016106e4565b848483818110610c6357610c63612526565b6001600160a01b03841660009081526009602090815260409091209102929092013590915550848483818110610c9b57610c9b612526565b9050602002013583610cad9190612513565b9250508080610cbb906125bd565b915050610bc7565b506127108114610d0b5760405162461bcd60e51b815260206004820152601360248201527224a72b20a624a22fa222a727a6a4a720aa27a960691b60448201526064016106e4565b5050505050565b6060600680546106fc906124c3565b60003381610d2f82866114a9565b905083811015610d8f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106e4565b6107b282868684036115e3565b60003361078d81858561177b565b6000466001036106ad575073a1f8a6807c402e4a15ef4eba36528a3fed24e57790565b600046600103610df0575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b466005036106ad575073b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b600046600103610e34575073ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b466005036106ad5750731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b600046600103610a95575073ac3e018457b222d93114458476f3e3416abbe38f90565b600046600103610e9b575073ae78736cd615f374d3085123a210448e74fc639390565b466005036106ad575073ae78736cd615f374d3085123a210448e74fc639390565b600046600103610edf575073ba12222222228d8ba445958a75a0704d566bf2c890565b466005036106ad575073ba12222222228d8ba445958a75a0704d566bf2c890565b6000803411610f3e5760405162461bcd60e51b815260206004820152600a6024820152695a45524f5f56414c554560b01b60448201526064016106e4565b60005b60075481101561117357600060078281548110610f6057610f60612526565b60009182526020808320909101546001600160a01b03168083526009909152604082205490925090612710610f958334612584565b610f9f919061259b565b604051631ca21dc760e11b8152600481018290529091506000906001600160a01b038516906339443b8e90602401602060405180830381865afa158015610fea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100e91906125d6565b1561107f57836001600160a01b031663d0e30db0836040518263ffffffff1660e01b815260040160206040518083038185885af1158015611053573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611078919061256b565b90506110e7565b836001600160a01b031663a4821719836040518263ffffffff1660e01b815260040160206040518083038185885af11580156110bf573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906110e4919061256b565b90505b60405163ef46b2ab60e01b8152600481018290526001600160a01b0385169063ef46b2ab90602401602060405180830381865afa15801561112c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611150919061256b565b61115a9087612513565b955050505050808061116b906125bd565b915050610f41565b5061117e3382611cb4565b90565b60008082116111bf5760405162461bcd60e51b815260206004820152600a6024820152695a45524f5f534841524560b01b60448201526064016106e4565b60006111ca60045490565b905060005b600754811015611471576000600782815481106111ee576111ee612526565b60009182526020822001546040805163154d950160e31b815281516001600160a01b039093169450849263aa6ca808926004808401939192918290030181865afa158015611240573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611264919061253c565b6040516370a0823160e01b815230600482015290925060009150859088906001600160a01b038516906370a0823190602401602060405180830381865afa1580156112b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d7919061256b565b6112e19190612584565b6112eb919061259b565b604051637df42f8360e11b8152600481018290529091506001600160a01b0384169063fbe85f0690602401602060405180830381865afa158015611333573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135791906125d6565b156113d857604051632e1a7d4d60e01b8152600481018290526001600160a01b03841690632e1a7d4d906024016020604051808303816000875af11580156113a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c7919061256b565b6113d19087612513565b955061145b565b6113e3828483611d75565b604051632397e4d760e01b8152600481018290526001600160a01b03841690632397e4d7906024016020604051808303816000875af115801561142a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144e919061256b565b6114589087612513565b95505b5050508080611469906125bd565b9150506111cf565b5061147c3384611eac565b604051339083156108fc029084906000818181858888f19350505050158015610a6b573d6000803e3d6000fd5b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6000466001036114f7575073bafa44efe7901e04e39dad13167d089c559c113890565b466005036106ad5750736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b6000466001036106ad57507f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b61154f611926565b6001600160a01b0381166115b45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106e4565b6115bd81611c64565b50565b6000466001036106ad575073f43211935c781d5ca1a41d2041f397b8a7366c7a90565b6001600160a01b0383166116455760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106e4565b6001600160a01b0382166116a65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106e4565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061171384846114a9565b90506000198114610b5e578181101561176e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106e4565b610b5e84848484036115e3565b6001600160a01b0383166117df5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106e4565b6001600160a01b0382166118415760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106e4565b6001600160a01b038316600090815260026020526040902054818110156118b95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106e4565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906119199086815260200190565b60405180910390a3610b5e565b6000546001600160a01b03163314610b765760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106e4565b80518251146119c25760405162461bcd60e51b815260206004820152600e60248201526d092dcecc2d8d2c84098cadccee8d60931b60448201526064016106e4565b60005b600754811015611aaf576000600782815481106119e4576119e4612526565b60009182526020808320909101546001600160a01b0316808352600882526040808420805460ff191690556009909252908220919091559050611a25610dcd565b60405163095ea7b360e01b81526001600160a01b03838116600483015260006024830152919091169063095ea7b3906044016020604051808303816000875af1158015611a76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9a91906125d6565b50508080611aa7906125bd565b9150506119c5565b508151611ac3906007906020850190612242565b506000805b8351811015611c17576000848281518110611ae557611ae5612526565b6020908102919091018101516001600160a01b038116600090815260089092526040909120805460ff191660011790558451909150849083908110611b2c57611b2c612526565b602002602001015160096000836001600160a01b03166001600160a01b0316815260200190815260200160002081905550838281518110611b6f57611b6f612526565b602002602001015183611b829190612513565b9250611b8c610dcd565b60405163095ea7b360e01b81526001600160a01b0383811660048301526000196024830152919091169063095ea7b3906044016020604051808303816000875af1158015611bde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0291906125d6565b50508080611c0f906125bd565b915050611ac8565b506127108114611c5f5760405162461bcd60e51b815260206004820152601360248201527224a72b20a624a22fa222a727a6a4a720aa27a960691b60448201526064016106e4565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216611d0a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106e4565b8060046000828254611d1c9190612513565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b801580611def5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611dc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ded919061256b565b155b611e5a5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016106e4565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611c5f908490611fe0565b6001600160a01b038216611f0c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106e4565b6001600160a01b03821660009081526002602052604090205481811015611f805760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106e4565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6000612035826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166120b29092919063ffffffff16565b805190915015611c5f578080602001905181019061205391906125d6565b611c5f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106e4565b60606120c184846000856120c9565b949350505050565b60608247101561212a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016106e4565b600080866001600160a01b0316858760405161214691906125f8565b60006040518083038185875af1925050503d8060008114612183576040519150601f19603f3d011682016040523d82523d6000602084013e612188565b606091505b5091509150612199878383876121a4565b979650505050505050565b6060831561221357825160000361220c576001600160a01b0385163b61220c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106e4565b50816120c1565b6120c183838151156122285781518083602001fd5b8060405162461bcd60e51b81526004016106e491906122e0565b828054828255906000526020600020908101928215612297579160200282015b8281111561229757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612262565b506122a39291506122a7565b5090565b5b808211156122a357600081556001016122a8565b60005b838110156122d75781810151838201526020016122bf565b50506000910152565b60208152600082518060208401526122ff8160408501602087016122bc565b601f01601f19169190910160400192915050565b6001600160a01b03811681146115bd57600080fd5b6000806040838503121561233b57600080fd5b823561234681612313565b946020939093013593505050565b60008060006060848603121561236957600080fd5b833561237481612313565b9250602084013561238481612313565b929592945050506040919091013590565b6000602082840312156123a757600080fd5b5035919050565b6000602082840312156123c057600080fd5b81356123cb81612313565b9392505050565b60008083601f8401126123e457600080fd5b50813567ffffffffffffffff8111156123fc57600080fd5b6020830191508360208260051b850101111561241757600080fd5b9250929050565b6000806000806040858703121561243457600080fd5b843567ffffffffffffffff8082111561244c57600080fd5b612458888389016123d2565b9096509450602087013591508082111561247157600080fd5b5061247e878288016123d2565b95989497509550505050565b6000806040838503121561249d57600080fd5b82356124a881612313565b915060208301356124b881612313565b809150509250929050565b600181811c908216806124d757607f821691505b6020821081036124f757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610793576107936124fd565b634e487b7160e01b600052603260045260246000fd5b6000806040838503121561254f57600080fd5b825161255a81612313565b60208401519092506124b881612313565b60006020828403121561257d57600080fd5b5051919050565b8082028115828204841417610793576107936124fd565b6000826125b857634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016125cf576125cf6124fd565b5060010190565b6000602082840312156125e857600080fd5b815180151581146123cb57600080fd5b6000825161260a8184602087016122bc565b919091019291505056fea2646970667358221220832f2fa1c3e1a22cbfb71aeddffbb22abd4326007d8b70d7ab3d91985740f3e064736f6c63430008110033";

type LSDAggregatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LSDAggregatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LSDAggregator__factory extends ContractFactory {
  constructor(...args: LSDAggregatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _adaptors: PromiseOrValue<string>[],
    _weights: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LSDAggregator> {
    return super.deploy(
      _adaptors,
      _weights,
      overrides || {}
    ) as Promise<LSDAggregator>;
  }
  override getDeployTransaction(
    _adaptors: PromiseOrValue<string>[],
    _weights: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_adaptors, _weights, overrides || {});
  }
  override attach(address: string): LSDAggregator {
    return super.attach(address) as LSDAggregator;
  }
  override connect(signer: Signer): LSDAggregator__factory {
    return super.connect(signer) as LSDAggregator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LSDAggregatorInterface {
    return new utils.Interface(_abi) as LSDAggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LSDAggregator {
    return new Contract(address, _abi, signerOrProvider) as LSDAggregator;
  }
}
