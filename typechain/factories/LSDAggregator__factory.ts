/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { LSDAggregator, LSDAggregatorInterface } from "../LSDAggregator";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "adaptorArr",
    outputs: [
      {
        internalType: "contract BaseAdapter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract BaseAdapter",
        name: "_adaptor",
        type: "address",
      },
    ],
    name: "addAdaptor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract BaseAdapter[]",
        name: "adaptors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "depositOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract BaseAdapter",
        name: "",
        type: "address",
      },
    ],
    name: "isAdaptor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610857806100826000396000f3fe60806040526004361061007b5760003560e01c806391198e101161004e57806391198e1014610149578063c3d9762014610169578063efc908a114610189578063f2fde38b1461019c57600080fd5b806323e3fbd51461008057806335d2ce27146100c0578063715018a6146101005780638da5cb5b14610117575b600080fd5b34801561008c57600080fd5b506100ad61009b3660046106b5565b60046020526000908152604090205481565b6040519081526020015b60405180910390f35b3480156100cc57600080fd5b506100f06100db3660046106b5565b60026020526000908152604090205460ff1681565b60405190151581526020016100b7565b34801561010c57600080fd5b506101156101bc565b005b34801561012357600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100b7565b34801561015557600080fd5b506101156101643660046106b5565b6101d0565b34801561017557600080fd5b506101316101843660046106d9565b61029f565b61011561019736600461073e565b6102c9565b3480156101a857600080fd5b506101156101b73660046106b5565b610524565b6101c461059d565b6101ce60006105f7565b565b6101d861059d565b6001600160a01b03811660009081526002602052604090205460ff16156102395760405162461bcd60e51b815260206004820152601060248201526f32bc34b9ba34b73396b0b230b83a37b960811b60448201526064015b60405180910390fd5b6001600160a01b03166000818152600260205260408120805460ff191660019081179091556003805491820181559091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319169091179055565b600381815481106102af57600080fd5b6000918252602090912001546001600160a01b0316905081565b6102d1610647565b8083116103125760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b6044820152606401610230565b6000805b8481101561044d57858582818110610330576103306107aa565b905060200201602081019061034591906106b5565b6001600160a01b031663d0e30db0858584818110610365576103656107aa565b905060200201356040518263ffffffff1660e01b815260040160206040518083038185885af115801561039c573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906103c191906107c0565b508383828181106103d4576103d46107aa565b9050602002013560046000336001600160a01b03166001600160a01b03168152602001908152602001600020600082825461040f91906107ef565b909155508490508382818110610427576104276107aa565b905060200201358261043991906107ef565b91508061044581610808565b915050610316565b5034811461048e5760405162461bcd60e51b815260206004820152600e60248201526d0ecc2d8eaca40dad2e6dac2e8c6d60931b6044820152606401610230565b471561051457604051600090339047908381818185875af1925050503d80600081146104d6576040519150601f19603f3d011682016040523d82523d6000602084013e6104db565b606091505b50509050806105125760405162461bcd60e51b815260206004820152600360248201526223192960e91b6044820152606401610230565b505b5061051e60018055565b50505050565b61052c61059d565b6001600160a01b0381166105915760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610230565b61059a816105f7565b50565b6000546001600160a01b031633146101ce5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610230565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6002600154036106995760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610230565b6002600155565b6001600160a01b038116811461059a57600080fd5b6000602082840312156106c757600080fd5b81356106d2816106a0565b9392505050565b6000602082840312156106eb57600080fd5b5035919050565b60008083601f84011261070457600080fd5b50813567ffffffffffffffff81111561071c57600080fd5b6020830191508360208260051b850101111561073757600080fd5b9250929050565b6000806000806040858703121561075457600080fd5b843567ffffffffffffffff8082111561076c57600080fd5b610778888389016106f2565b9096509450602087013591508082111561079157600080fd5b5061079e878288016106f2565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156107d257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610802576108026107d9565b92915050565b60006001820161081a5761081a6107d9565b506001019056fea26469706673582212203d6e556c6f6a50a5aa407c2a59f3885b3e21ed343fd37febdda6703cecaa56e764736f6c63430008110033";

type LSDAggregatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LSDAggregatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LSDAggregator__factory extends ContractFactory {
  constructor(...args: LSDAggregatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LSDAggregator> {
    return super.deploy(overrides || {}) as Promise<LSDAggregator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LSDAggregator {
    return super.attach(address) as LSDAggregator;
  }
  override connect(signer: Signer): LSDAggregator__factory {
    return super.connect(signer) as LSDAggregator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LSDAggregatorInterface {
    return new utils.Interface(_abi) as LSDAggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LSDAggregator {
    return new Contract(address, _abi, signerOrProvider) as LSDAggregator;
  }
}
