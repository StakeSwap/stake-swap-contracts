/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { LidoAdapter, LidoAdapterInterface } from "../LidoAdapter";

const _abi = [
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adaptorName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "token2",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "supportWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040524260805234801561001457600080fd5b5060016000556080516109a4610032600039600050506109a46000f3fe6080604052600436106100c25760003560e01c8063a8b676851161007f578063c1fe3e4811610059578063c1fe3e4814610230578063c89d5b8b14610245578063d0e30db01461025a578063fe92d7701461026257600080fd5b8063a8b67685146101bf578063aa6ca808146101d5578063aaf5eb681461021457600080fd5b80632e1a7d4d146100c757806331716687146100fb578063378de45b1461011157806339443b8e1461012f5780634aa07e641461015f5780638c9adb2d1461018c575b600080fd5b3480156100d357600080fd5b506100e86100e23660046107c9565b50600090565b6040519081526020015b60405180910390f35b34801561010757600080fd5b506100e860025481565b34801561011d57600080fd5b506100e861012c3660046107c9565b90565b34801561013b57600080fd5b5061014f61014a3660046107c9565b610276565b60405190151581526020016100f2565b34801561016b57600080fd5b5061017461034b565b6040516001600160a01b0390911681526020016100f2565b34801561019857600080fd5b5060408051808201825260048152636c69646f60e01b602082015290516100f291906107e2565b3480156101cb57600080fd5b506100e860015481565b3480156101e157600080fd5b506101ea6103cf565b604080516001600160a01b03948516815292841660208401529216918101919091526060016100f2565b34801561022057600080fd5b506100e8670de0b6b3a764000081565b34801561023c57600080fd5b506101746103e3565b34801561025157600080fd5b506100e8610427565b6100e861057d565b34801561026e57600080fd5b50600061014f565b60008160000361028857506000919050565b600080600080600080600061029b6103e3565b6001600160a01b031663665b4b0b6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156102d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fc9190610845565b9650965096509650965096509650861561031f5750600098975050505050505050565b851561033c578489111561033c5750600098975050505050505050565b50600198975050505050505050565b60004660010361036e5750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b4660050361038f5750736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b60448201526064015b60405180910390fd5b60008060006103dc6103e3565b9250909192565b600046600103610406575073ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b4660050361038f5750731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b60008061043261034b565b6001600160a01b031663035faf826040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049391906108a7565b9050600061049f6103e3565b6001600160a01b031663ced72f876040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050091906108c0565b61ffff169050816000036105175760009250505090565b6000610527635fdbd4dc42610901565b90506127106105368382610901565b82610549670de0b6b3a764000087610901565b610557906301e187e061091a565b6105619190610931565b61056b919061091a565b6105759190610931565b935050505090565b60008034116105c05760405162461bcd60e51b815260206004820152600f60248201526e1b9bdb8b5e995c9bc8185b5bdd5b9d608a1b60448201526064016103c6565b60006105ca6103e3565b60405163a1903eab60e01b8152600060048201526001600160a01b03919091169063a1903eab90349060240160206040518083038185885af1158015610614573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061063991906108a7565b90506106436103e3565b6001600160a01b031663095ea7b361065961034b565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156106a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ca9190610953565b5060006106d561034b565b6001600160a01b031663ea598cb0836040518263ffffffff1660e01b815260040161070291815260200190565b6020604051808303816000875af1158015610721573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074591906108a7565b905061074f61034b565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303816000875af115801561079e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c29190610953565b5092915050565b6000602082840312156107db57600080fd5b5035919050565b600060208083528351808285015260005b8181101561080f578581018301518582016040015282016107f3565b506000604082860101526040601f19601f8301168501019250505092915050565b8051801515811461084057600080fd5b919050565b600080600080600080600060e0888a03121561086057600080fd5b61086988610830565b965061087760208901610830565b604089015160608a015160808b015160a08c015160c0909c01519a9d939c50919a90999198509650945092505050565b6000602082840312156108b957600080fd5b5051919050565b6000602082840312156108d257600080fd5b815161ffff811681146108e457600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610914576109146108eb565b92915050565b8082028115828204841417610914576109146108eb565b60008261094e57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561096557600080fd5b6108e48261083056fea26469706673582212205723e8b9b6d7d93c73e0c91aed6cb0d3e21b825a873df43920e1f5ddd73e777264736f6c63430008110033";

type LidoAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LidoAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LidoAdapter__factory extends ContractFactory {
  constructor(...args: LidoAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LidoAdapter> {
    return super.deploy(overrides || {}) as Promise<LidoAdapter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LidoAdapter {
    return super.attach(address) as LidoAdapter;
  }
  override connect(signer: Signer): LidoAdapter__factory {
    return super.connect(signer) as LidoAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LidoAdapterInterface {
    return new utils.Interface(_abi) as LidoAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LidoAdapter {
    return new Contract(address, _abi, signerOrProvider) as LidoAdapter;
  }
}
