/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { LidoAdapter, LidoAdapterInterface } from "../LidoAdapter";

const _abi = [
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adaptorName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "token2",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040524260805234801561001457600080fd5b506001600055608051610ab161003260003960005050610ab16000f3fe6080604052600436106100c25760003560e01c8063a8b676851161007f578063b51459fe11610059578063b51459fe1461022f578063c1fe3e4814610243578063c89d5b8b14610258578063d0e30db01461026d57600080fd5b8063a8b67685146101be578063aa6ca808146101d4578063aaf5eb681461021357600080fd5b80632e1a7d4d146100c757806331716687146100fa578063378de45b1461011057806339443b8e1461012e5780634aa07e641461015e5780638c9adb2d1461018b575b600080fd5b3480156100d357600080fd5b506100e76100e23660046108db565b610275565b6040519081526020015b60405180910390f35b34801561010657600080fd5b506100e760025481565b34801561011c57600080fd5b506100e761012b3660046108db565b90565b34801561013a57600080fd5b5061014e6101493660046108db565b6102c3565b60405190151581526020016100f1565b34801561016a57600080fd5b50610173610398565b6040516001600160a01b0390911681526020016100f1565b34801561019757600080fd5b5060408051808201825260048152636c69646f60e01b602082015290516100f191906108f4565b3480156101ca57600080fd5b506100e760015481565b3480156101e057600080fd5b506101e9610417565b604080516001600160a01b03948516815292841660208401529216918101919091526060016100f1565b34801561021f57600080fd5b506100e7670de0b6b3a764000081565b34801561023b57600080fd5b50600061014e565b34801561024f57600080fd5b50610173610438565b34801561026457600080fd5b506100e761047c565b6100e76105d2565b600061027f610636565b60405162461bcd60e51b815260206004820152600f60248201526e43414e4e4f5420574954484452415760881b60448201526064015b60405180910390fd5b919050565b6000816000036102d557506000919050565b60008060008060008060006102e8610438565b6001600160a01b031663665b4b0b6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610325573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103499190610952565b9650965096509650965096509650861561036c5750600098975050505050505050565b851561038957848911156103895750600098975050505050505050565b50600198975050505050505050565b6000466001036103bb5750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b466005036103dc5750736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b60448201526064016102b5565b6000806000610424610398565b925061042e610438565b9293600092509050565b60004660010361045b575073ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b466005036103dc5750731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b600080610487610398565b6001600160a01b031663035faf826040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e891906109b4565b905060006104f4610438565b6001600160a01b031663ced72f876040518163ffffffff1660e01b8152600401602060405180830381865afa158015610531573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055591906109cd565b61ffff1690508160000361056c5760009250505090565b600061057c635fdbd4dc42610a0e565b905061271061058b8382610a0e565b8261059e670de0b6b3a764000087610a0e565b6105ac906301e187e0610a27565b6105b69190610a3e565b6105c09190610a27565b6105ca9190610a3e565b935050505090565b60006105dc610636565b6105e5346102c3565b6106225760405162461bcd60e51b815260206004820152600e60248201526d10d0539393d50811115413d4d25560921b60448201526064016102b5565b61062a61068f565b905061012b6001600055565b6002600054036106885760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102b5565b6002600055565b60008034116106d25760405162461bcd60e51b815260206004820152600f60248201526e1b9bdb8b5e995c9bc8185b5bdd5b9d608a1b60448201526064016102b5565b60006106dc610438565b60405163a1903eab60e01b8152600060048201526001600160a01b03919091169063a1903eab90349060240160206040518083038185885af1158015610726573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061074b91906109b4565b9050610755610438565b6001600160a01b031663095ea7b361076b610398565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156107b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dc9190610a60565b5060006107e7610398565b6001600160a01b031663ea598cb0836040518263ffffffff1660e01b815260040161081491815260200190565b6020604051808303816000875af1158015610833573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085791906109b4565b9050610861610398565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303816000875af11580156108b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d49190610a60565b5092915050565b6000602082840312156108ed57600080fd5b5035919050565b600060208083528351808285015260005b8181101561092157858101830151858201604001528201610905565b506000604082860101526040601f19601f8301168501019250505092915050565b805180151581146102be57600080fd5b600080600080600080600060e0888a03121561096d57600080fd5b61097688610942565b965061098460208901610942565b604089015160608a015160808b015160a08c015160c0909c01519a9d939c50919a90999198509650945092505050565b6000602082840312156109c657600080fd5b5051919050565b6000602082840312156109df57600080fd5b815161ffff811681146109f157600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610a2157610a216109f8565b92915050565b8082028115828204841417610a2157610a216109f8565b600082610a5b57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610a7257600080fd5b6109f18261094256fea26469706673582212202cc4e2226a4f2e6e03351015338548e6dddb9dfd618c1eccc69f590f100b050664736f6c63430008110033";

type LidoAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LidoAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LidoAdapter__factory extends ContractFactory {
  constructor(...args: LidoAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LidoAdapter> {
    return super.deploy(overrides || {}) as Promise<LidoAdapter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LidoAdapter {
    return super.attach(address) as LidoAdapter;
  }
  override connect(signer: Signer): LidoAdapter__factory {
    return super.connect(signer) as LidoAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LidoAdapterInterface {
    return new utils.Interface(_abi) as LidoAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LidoAdapter {
    return new Contract(address, _abi, signerOrProvider) as LidoAdapter;
  }
}
