/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Pair, PairInterface } from "../Pair";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
    ],
    name: "Sync",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_rETH_ETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_frxETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_stETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINIMUM_LIQUIDITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint112",
        name: "_reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "_reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "_blockTimestampLast",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lp",
        type: "uint256",
      },
    ],
    name: "onStake",
    outputs: [
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolETHAmount",
        type: "uint256",
      },
    ],
    name: "onUnstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "price0CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedWETHAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001600e5534801561001557600080fd5b50604080518082018252600a8152692ab734b9bbb0b8102b1960b11b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fbfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b03191633179055612b3b806101086000396000f3fe608060405234801561001057600080fd5b50600436106102bb5760003560e01c80637ecebe0011610182578063c45a0155116100e9578063d21220a7116100a2578063ebdfda5e1161007c578063ebdfda5e14610624578063f2cd3a121461062c578063f781b24e14610634578063fff6cae91461063c57600080fd5b8063d21220a7146105d3578063d505accf146105e6578063dd62ed3e146105f957600080fd5b8063c45a01551461059f578063c514abf3146105b2578063c9ac8c8e146105bb578063ca8aa0e4146105c3578063cbc74de7146102c0578063ce069614146105cb57600080fd5b8063ad5c46481161013b578063ad5c464814610560578063ba9a7a5614610568578063bc25cf7714610571578063be78e8d914610470578063c0c53b8b14610584578063c1fe3e481461059757600080fd5b80637ecebe00146104c557806389afcb44146104e557806395d89b411461050d5780639efed7c114610532578063a9059cbb14610545578063aa6430c61461055857600080fd5b8063393127a1116102265780635a33bbbe116101df5780635a33bbbe146104705780635a3d549314610478578063698e0796146104815780636a6278421461048957806370a082311461049c5780637464fc3d146104bc57600080fd5b8063393127a1146104295780634aa07e641461043c5780634bc0dcb6146104445780634cf088d91461044c578063565d3e6e1461045f5780635909c0d51461046757600080fd5b806318160ddd1161027857806318160ddd146103ad57806323b872dd146103c457806323c34a64146103d757806330adf81f146103df578063313ce567146104065780633644e5151461042057600080fd5b8063020b627d146102c0578063022c0d9f146102e057806306fdde03146102f55780630902f1ac1461032b578063095ea7b31461035f5780630dfe168114610382575b600080fd5b6102c8610644565b604051600f9190910b81526020015b60405180910390f35b6102f36102ee366004612669565b610694565b005b61031e6040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b81525081565b6040516102d79190612723565b610333610b91565b604080516001600160701b03948516815293909216602084015263ffffffff16908201526060016102d7565b61037261036d366004612756565b610bbb565b60405190151581526020016102d7565b600754610395906001600160a01b031681565b6040516001600160a01b0390911681526020016102d7565b6103b660005481565b6040519081526020016102d7565b6103726103d2366004612782565b610bd2565b6103b6610c66565b6103b67f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61040e601281565b60405160ff90911681526020016102d7565b6103b660035481565b6103b66104373660046127c3565b610c95565b610395610f59565b610395610f9d565b600654610395906001600160a01b031681565b610395610fc0565b6103b6600b5481565b6102c8611004565b6103b6600c5481565b610395611014565b6103b66104973660046127dc565b611037565b6103b66104aa3660046127dc565b60016020526000908152604090205481565b6103b6600d5481565b6103b66104d33660046127dc565b60046020526000908152604090205481565b6104f86104f33660046127dc565b6112ff565b604080519283526020830191909152016102d7565b61031e604051806040016040528060068152602001652aa72496ab1960d11b81525081565b6102f36105403660046127c3565b611665565b610372610553366004612756565b61171f565b61039561172c565b61039561174f565b6103b66103e881565b6102f361057f3660046127dc565b611793565b6102f36105923660046127f9565b6118a7565b610395611937565b600554610395906001600160a01b031681565b6103b6600a5481565b61039561197b565b61039561199e565b6103956119e2565b600854610395906001600160a01b031681565b6102f36105f4366004612844565b611a26565b6103b66106073660046128bb565b600260209081526000928352604080842090915290825290205481565b610395611c3a565b6103b6611c7e565b610395611cad565b6102f3611cd0565b6000466001036106545750600190565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b60448201526064015b60405180910390fd5b600e546001146106b65760405162461bcd60e51b815260040161068b906128f4565b6000600e55841515806106c95750600084115b6107235760405162461bcd60e51b815260206004820152602560248201527f556e697377617056323a20494e53554646494349454e545f4f55545055545f416044820152641353d5539560da1b606482015260840161068b565b60008061072e610b91565b5091509150816001600160701b0316871080156107535750806001600160701b031686105b6107a95760405162461bcd60e51b815260206004820152602160248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152605960f81b606482015260840161068b565b60075460085460009182916001600160a01b039182169190811690891682148015906107e75750806001600160a01b0316896001600160a01b031614155b61082b5760405162461bcd60e51b8152602060048201526015602482015274556e697377617056323a20494e56414c49445f544f60581b604482015260640161068b565b8a1561083c5761083c828a8d611df4565b891561084d5761084d818a8c611df4565b86156108ba576040516304347a1760e21b81526001600160a01b038a16906310d1e85c906108879033908f908f908e908e9060040161291f565b600060405180830381600087803b1580156108a157600080fd5b505af11580156108b5573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610922919061296b565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a0823190602401602060405180830381865afa158015610969573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098d919061296b565b92505050600089856001600160701b03166109a8919061299a565b83116109b55760006109d2565b6109c88a6001600160701b03871661299a565b6109d2908461299a565b905060006109e98a6001600160701b03871661299a565b83116109f6576000610a13565b610a098a6001600160701b03871661299a565b610a13908461299a565b90506000821180610a245750600081115b610a7c5760405162461bcd60e51b8152602060048201526024808201527f556e697377617056323a20494e53554646494349454e545f494e5055545f414d60448201526313d5539560e21b606482015260840161068b565b6000610a9e610a8c846003611f3f565b610a98876103e8611f3f565b90611fa6565b90506000610ab0610a8c846003611f3f565b9050610ad5620f4240610acf6001600160701b038b8116908b16611f3f565b90611f3f565b610adf8383611f3f565b1015610b1c5760405162461bcd60e51b815260206004820152600c60248201526b556e697377617056323a204b60a01b604482015260640161068b565b5050610b2a84848888611ffc565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600e55505050505050505050565b6009546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610bc83384846121e8565b5060015b92915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610c51576001600160a01b0384166000908152600260209081526040808320338452909152902054610c2c9083611fa6565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610c5c84848461224a565b5060019392505050565b60004660010361065457507f1e19cf2d73a72ef1332c882f20534b6519be027600020000000000000000011290565b6006546000906001600160a01b03163314610cdc5760405162461bcd60e51b815260206004820152600760248201526609c9ebe82aaa8960cb1b604482015260640161068b565b6000610ce661174f565b6007546001600160a01b0390811691161490506000610d0361174f565b6008546001600160a01b0390811691161490508180610d1f5750805b610d5a5760405162461bcd60e51b815260206004820152600c60248201526b24a72b20a624a22fa820a4a960a11b604482015260640161068b565b600082610d72576008546001600160a01b0316610d7f565b6007546001600160a01b03165b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610dc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de9919061296b565b90506000600a5482610dfb91906129ad565b905060646000548783610e0e91906129c0565b610e1891906129ed565b610e239060326129c0565b610e2d91906129ed565b94508482118015610e5c5750610e43858361299a565b6064610e508360326129c0565b610e5a91906129ed565b115b610e965760405162461bcd60e51b815260206004820152600b60248201526a13d5915497d4d51052d15160aa1b604482015260640161068b565b84600a6000828254610ea891906129ad565b90915550610eb6905061174f565b6001600160a01b0316632e1a7d4d866040518263ffffffff1660e01b8152600401610ee391815260200190565b600060405180830381600087803b158015610efd57600080fd5b505af1158015610f11573d6000803e3d6000fd5b50506006546040516001600160a01b03909116925087156108fc02915087906000818181858888f19350505050158015610f4f573d6000803e3d6000fd5b5050505050919050565b600046600103610f7c5750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b466005036106545750736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b600046600103610654575073dc24316b9ae028f1497c275eb9192a3ea0f6702290565b600046600103610fe35750735e8422345238f34275888049021821e8e08caa1f90565b466005036106545750733e04888b1c07a9805861c19551f7ed53145bd8d490565b6000466001036106545750600090565b60004660010361065457507306325440d014e39736583c165c2963ba99faf14e90565b6000600e5460011461105b5760405162461bcd60e51b815260040161068b906128f4565b6000600e8190558061106b610b91565b506007546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156110bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e1919061296b565b6008546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561112f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611153919061296b565b9050600061116a836001600160701b038716611fa6565b90506000611181836001600160701b038716611fa6565b9050600061118f87876122f0565b600080549192508190036111c9576111b56103e8610a986111b08787611f3f565b61242d565b98506111c460006103e861249d565b611210565b61120d6001600160701b0389166111e08684611f3f565b6111ea91906129ed565b6001600160701b0389166111fe8685611f3f565b61120891906129ed565b61252c565b98505b600089116112715760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d3525395115160c21b606482015260840161068b565b61127b8a8a61249d565b61128786868a8a611ffc565b81156112b1576009546112ad906001600160701b0380821691600160701b900416611f3f565b600d555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600e5550949695505050505050565b600080600e546001146113245760405162461bcd60e51b815260040161068b906128f4565b6000600e81905580611334610b91565b506007546008546040516370a0823160e01b81523060048201529395509193506001600160a01b039081169291169060009083906370a0823190602401602060405180830381865afa15801561138e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b2919061296b565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156113fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611420919061296b565b3060009081526001602052604081205491925061143d88886122f0565b6000549091508061144e8487611f3f565b61145891906129ed565b9a50806114658486611f3f565b61146f91906129ed565b995060008b118015611481575060008a115b6114de5760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d0955493915160c21b606482015260840161068b565b6114e83084612544565b6114f3878d8d611df4565b6114fe868d8c611df4565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa158015611542573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611566919061296b565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a0823190602401602060405180830381865afa1580156115ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d1919061296b565b93506115df85858b8b611ffc565b811561160957600954611605906001600160701b0380821691600160701b900416611f3f565b600d555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600e81905550915091565b6006546001600160a01b031633146116a95760405162461bcd60e51b815260206004820152600760248201526609c9ebe82aaa8960cb1b604482015260640161068b565b80600a60008282546116bb919061299a565b909155506116c9905061174f565b6001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561170357600080fd5b505af1158015611717573d6000803e3d6000fd5b505050505050565b6000610bc833848461224a565b600046600103610654575073a1f8a6807c402e4a15ef4eba36528a3fed24e57790565b600046600103611772575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b46600503610654575073b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b600e546001146117b55760405162461bcd60e51b815260040161068b906128f4565b6000600e556007546008546009546040516370a0823160e01b81523060048201526001600160a01b039384169390921691611850918491869161184b916001600160701b039091169084906370a08231906024015b602060405180830381865afa158015611827573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a98919061296b565b611df4565b6009546040516370a0823160e01b815230600482015261189d918391869161184b91600160701b9091046001600160701b0316906001600160a01b038516906370a082319060240161180a565b50506001600e5550565b6005546001600160a01b031633146118f85760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b604482015260640161068b565b600780546001600160a01b039485166001600160a01b031991821617909155600880549385169382169390931790925560068054919093169116179055565b60004660010361195a575073ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b466005036106545750731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b600046600103610fe3575073ac3e018457b222d93114458476f3e3416abbe38f90565b6000466001036119c1575073ae78736cd615f374d3085123a210448e74fc639390565b46600503610654575073ae78736cd615f374d3085123a210448e74fc639390565b600046600103611a05575073ba12222222228d8ba445958a75a0704d566bf2c890565b46600503610654575073ba12222222228d8ba445958a75a0704d566bf2c890565b42841015611a6b5760405162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b604482015260640161068b565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b919087611abe83612a01565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001611b3792919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611ba2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590611bd85750886001600160a01b0316816001600160a01b0316145b611c245760405162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604482015260640161068b565b611c2f8989896121e8565b505050505050505050565b600046600103611c5d575073bafa44efe7901e04e39dad13167d089c559c113890565b466005036106545750736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b60004660010361065457507f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b600046600103610654575073f43211935c781d5ca1a41d2041f397b8a7366c7a90565b600e54600114611cf25760405162461bcd60e51b815260040161068b906128f4565b6000600e556007546040516370a0823160e01b8152306004820152611ded916001600160a01b0316906370a0823190602401602060405180830381865afa158015611d41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d65919061296b565b6008546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611dad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd1919061296b565b6009546001600160701b0380821691600160701b900416611ffc565b6001600e55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b17905291516000928392871691611e809190612a1a565b6000604051808303816000865af19150503d8060008114611ebd576040519150601f19603f3d011682016040523d82523d6000602084013e611ec2565b606091505b5091509150818015611eec575080511580611eec575080806020019051810190611eec9190612a36565b611f385760405162461bcd60e51b815260206004820152601a60248201527f556e697377617056323a205452414e534645525f4641494c4544000000000000604482015260640161068b565b5050505050565b6000811580611f6357508282611f5581836129c0565b9250611f6190836129ed565b145b610bcc5760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015260640161068b565b600082611fb3838261299a565b9150811115610bcc5760405162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015260640161068b565b6001600160701b03841180159061201a57506001600160701b038311155b61205c5760405162461bcd60e51b8152602060048201526013602482015272556e697377617056323a204f564552464c4f5760681b604482015260640161068b565b600061206d64010000000042612a58565b60095490915060009061208d90600160e01b900463ffffffff1683612a6c565b905060008163ffffffff161180156120ad57506001600160701b03841615155b80156120c157506001600160701b03831615155b15612150578063ffffffff166120e9856120da866125ce565b6001600160e01b0316906125e7565b6001600160e01b03166120fc91906129c0565b600b600082825461210d91906129ad565b909155505063ffffffff8116612126846120da876125ce565b6001600160e01b031661213991906129c0565b600c600082825461214a91906129ad565b90915550505b6009805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831660009081526001602052604090205461226d9082611fa6565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461229c90826125fc565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061223d9085815260200190565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015612346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236a9190612a90565b600d546001600160a01b0382161580159450919250906124195780156124145760006123a56111b06001600160701b03888116908816611f3f565b905060006123b28361242d565b9050808211156124115760006123d46123cb8484611fa6565b60005490611f3f565b905060006123ed836123e7866005611f3f565b906125fc565b905060006123fb82846129ed565b9050801561240d5761240d878261249d565b5050505b50505b612425565b8015612425576000600d555b505092915050565b6000600382111561248e57508060006124476002836129ed565b6124529060016129ad565b90505b818110156124885790508060028161246d81866129ed565b61247791906129ad565b61248191906129ed565b9050612455565b50919050565b8115612498575060015b919050565b6000546124aa90826125fc565b60009081556001600160a01b0383168152600160205260409020546124cf90826125fc565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906125209085815260200190565b60405180910390a35050565b600081831061253b578161253d565b825b9392505050565b6001600160a01b0382166000908152600160205260409020546125679082611fa6565b6001600160a01b0383166000908152600160205260408120919091555461258e9082611fa6565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001612520565b6000610bcc600160701b6001600160701b038416612aad565b600061253d6001600160701b03831684612adf565b60008261260983826129ad565b9150811015610bcc5760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015260640161068b565b6001600160a01b038116811461266657600080fd5b50565b60008060008060006080868803121561268157600080fd5b8535945060208601359350604086013561269a81612651565b9250606086013567ffffffffffffffff808211156126b757600080fd5b818801915088601f8301126126cb57600080fd5b8135818111156126da57600080fd5b8960208285010111156126ec57600080fd5b9699959850939650602001949392505050565b60005b8381101561271a578181015183820152602001612702565b50506000910152565b60208152600082518060208401526127428160408501602087016126ff565b601f01601f19169190910160400192915050565b6000806040838503121561276957600080fd5b823561277481612651565b946020939093013593505050565b60008060006060848603121561279757600080fd5b83356127a281612651565b925060208401356127b281612651565b929592945050506040919091013590565b6000602082840312156127d557600080fd5b5035919050565b6000602082840312156127ee57600080fd5b813561253d81612651565b60008060006060848603121561280e57600080fd5b833561281981612651565b9250602084013561282981612651565b9150604084013561283981612651565b809150509250925092565b600080600080600080600060e0888a03121561285f57600080fd5b873561286a81612651565b9650602088013561287a81612651565b95506040880135945060608801359350608088013560ff8116811461289e57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156128ce57600080fd5b82356128d981612651565b915060208301356128e981612651565b809150509250929050565b602080825260119082015270155b9a5cddd85c158c8e881313d0d2d151607a1b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b60006020828403121561297d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610bcc57610bcc612984565b80820180821115610bcc57610bcc612984565b8082028115828204841417610bcc57610bcc612984565b634e487b7160e01b600052601260045260246000fd5b6000826129fc576129fc6129d7565b500490565b600060018201612a1357612a13612984565b5060010190565b60008251612a2c8184602087016126ff565b9190910192915050565b600060208284031215612a4857600080fd5b8151801515811461253d57600080fd5b600082612a6757612a676129d7565b500690565b63ffffffff828116828216039080821115612a8957612a89612984565b5092915050565b600060208284031215612aa257600080fd5b815161253d81612651565b6001600160e01b03828116828216818102831692918115828504821417612ad657612ad6612984565b50505092915050565b60006001600160e01b0383811680612af957612af96129d7565b9216919091049291505056fea26469706673582212206af9076ed297e57966bbdd82f739dc778845e616b8943d94d82fd4bdb4a8514b64736f6c63430008110033";

type PairConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PairConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pair__factory extends ContractFactory {
  constructor(...args: PairConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Pair> {
    return super.deploy(overrides || {}) as Promise<Pair>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Pair {
    return super.attach(address) as Pair;
  }
  override connect(signer: Signer): Pair__factory {
    return super.connect(signer) as Pair__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PairInterface {
    return new utils.Interface(_abi) as PairInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Pair {
    return new Contract(address, _abi, signerOrProvider) as Pair;
  }
}
