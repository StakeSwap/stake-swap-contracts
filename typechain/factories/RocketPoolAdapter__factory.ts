/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  RocketPoolAdapter,
  RocketPoolAdapterInterface,
} from "../RocketPoolAdapter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adaptorName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "buyToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRocketDAOProtocolSettingsDeposit",
    outputs: [
      {
        internalType: "contract RocketDAOProtocolSettingsDepositInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRocketDrocketDepositPool",
    outputs: [
      {
        internalType: "contract RocketDepositPoolInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_contractName",
        type: "string",
      },
    ],
    name: "getRocketPoolContractAddresst",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRocketVault",
    outputs: [
      {
        internalType: "contract RocketVaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "token2",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rocketPoolStorage",
    outputs: [
      {
        internalType: "contract RocketStorageInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040524260805234801561001457600080fd5b5060016000556080516119ca610032600039600050506119ca6000f3fe6080604052600436106101855760003560e01c8063aa6ca808116100d1578063c89d5b8b1161008a578063ce06961411610064578063ce06961414610465578063d0e30db01461047a578063ebdfda5e14610482578063f2cd3a121461049757600080fd5b8063c89d5b8b14610426578063c9ac8c8e1461043b578063ca8aa0e41461045057600080fd5b8063aa6ca8081461036d578063aaf5eb68146103ac578063ad5c4648146103c8578063b51459fe146103dd578063c1fe3e48146103f1578063c54505ca1461040657600080fd5b80634bc0dcb61161013e578063698e079611610118578063698e0796146103025780638c9adb2d146103175780639eb0506c14610350578063a48217191461036557600080fd5b80634bc0dcb6146102c3578063565d3e6e146102d85780636718cdea146102ed57600080fd5b80630aa22427146101e95780632397e4d71461021b5780632e1a7d4d14610249578063353d60e31461026957806339443b8e1461027e5780634aa07e64146102ae57600080fd5b366101e4576101926104ac565b6001600160a01b0316336001600160a01b0316146101e25760405162461bcd60e51b815260206004820152600860248201526709c9ea840ae8aa8960c31b60448201526064015b60405180910390fd5b005b600080fd5b3480156101f557600080fd5b506101fe61052b565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561022757600080fd5b5061023b61023636600461163f565b610570565b604051908152602001610212565b34801561025557600080fd5b5061023b61026436600461163f565b6105f0565b34801561027557600080fd5b506101fe6106b8565b34801561028a57600080fd5b5061029e61029936600461163f565b6106db565b6040519015158152602001610212565b3480156102ba57600080fd5b506101fe6108e7565b3480156102cf57600080fd5b506101fe61092b565b3480156102e457600080fd5b506101fe61094e565b3480156102f957600080fd5b506101fe610992565b34801561030e57600080fd5b506101fe6109c0565b34801561032357600080fd5b50604080518082018252600a8152691c9bd8dad95d1c1bdbdb60b21b6020820152905161021291906116a8565b34801561035c57600080fd5b506101fe6109e3565b61023b610a17565b34801561037957600080fd5b50610382610a98565b604080516001600160a01b0394851681529284166020840152921691810191909152606001610212565b3480156103b857600080fd5b5061023b670de0b6b3a764000081565b3480156103d457600080fd5b506101fe6104ac565b3480156103e957600080fd5b50600061029e565b3480156103fd57600080fd5b506101fe610aac565b34801561041257600080fd5b506101fe6104213660046116d8565b610af0565b34801561043257600080fd5b5061023b610b75565b34801561044757600080fd5b506101fe610c37565b34801561045c57600080fd5b506101fe610c5a565b34801561047157600080fd5b506101fe610c9e565b61023b610ce2565b34801561048e57600080fd5b506101fe610ddb565b3480156104a357600080fd5b5061023b610e1f565b6000466001036104cf575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b466005036104f0575073b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b60448201526064016101d9565b600061056b6040518060400160405280602081526020017f726f636b657444414f50726f746f636f6c53657474696e67734465706f736974815250610af0565b905090565b600061057a610e4e565b600082116105b85760405162461bcd60e51b815260206004820152600b60248201526a16915493c8105353d5539560aa1b60448201526064016101d9565b60006105c2610a98565b505090506105d281333086610ea7565b60006105dd84610f18565b925050506105eb6001600055565b919050565b60006105fa610e4e565b600082116106385760405162461bcd60e51b815260206004820152600b60248201526a16915493c8105353d5539560aa1b60448201526064016101d9565b610641826106db565b61067e5760405162461bcd60e51b815260206004820152600e60248201526d10d0539393d50811115413d4d25560921b60448201526064016101d9565b60405162461bcd60e51b815260206004820152600f60248201526e43414e4e4f5420574954484452415760881b60448201526064016101d9565b6000466001036104f05750731d8f8f00cfa6758d7be78336684788fb0ee0fa4690565b6000806106e661052b565b9050806001600160a01b0316636ada78476040518163ffffffff1660e01b8152600401602060405180830381865afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190611789565b6107575750600092915050565b806001600160a01b031663035cf1426040518163ffffffff1660e01b8152600401602060405180830381865afa158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b991906117ab565b8310156107c95750600092915050565b60006107d3610992565b9050816001600160a01b031663fd6ce89e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610813573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083791906117ab565b6040516335ee5f8760e01b81526020600482015260116024820152701c9bd8dad95d11195c1bdcda5d141bdbdb607a1b604482015285906001600160a01b038416906335ee5f8790606401602060405180830381865afa15801561089f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c391906117ab565b6108cd91906117da565b11156108dd575060009392505050565b5060019392505050565b60004660010361090a5750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b466005036104f05750736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b6000466001036104f0575073dc24316b9ae028f1497c275eb9192a3ea0f6702290565b6000466001036109715750735e8422345238f34275888049021821e8e08caa1f90565b466005036104f05750733e04888b1c07a9805861c19551f7ed53145bd8d490565b600061056b6040518060400160405280600b81526020016a1c9bd8dad95d15985d5b1d60aa1b815250610af0565b6000466001036104f057507306325440d014e39736583c165c2963ba99faf14e90565b600061056b604051806040016040528060118152602001701c9bd8dad95d11195c1bdcda5d141bdbdb607a1b815250610af0565b6000610a21610e4e565b60003411610a635760405162461bcd60e51b815260206004820152600f60248201526e16915493c811551208105353d55395608a1b60448201526064016101d9565b6000610a6d61114a565b90506000610a79610a98565b50509050610a88813384611283565b509050610a956001600055565b90565b6000806000610aa5610c5a565b9250909192565b600046600103610acf575073ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b466005036104f05750731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b600080610b2283604051602001610b0791906117ed565b604051602081830303815290604052805190602001206112b8565b90506001600160a01b038116610b6f5760405162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081b9bdd08199bdd5b9960721b60448201526064016101d9565b92915050565b600080610b80610c5a565b6001600160a01b031663e6aa216c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be191906117ab565b905080600003610bf357600091505090565b6000610c036361554c7b42611825565b905080610c18670de0b6b3a764000084611825565b610c26906301e187e0611838565b610c30919061184f565b9250505090565b600046600103610971575073ac3e018457b222d93114458476f3e3416abbe38f90565b600046600103610c7d575073ae78736cd615f374d3085123a210448e74fc639390565b466005036104f0575073ae78736cd615f374d3085123a210448e74fc639390565b600046600103610cc1575073ba12222222228d8ba445958a75a0704d566bf2c890565b466005036104f0575073ba12222222228d8ba445958a75a0704d566bf2c890565b6000610cec610e4e565b60003411610d2e5760405162461bcd60e51b815260206004820152600f60248201526e16915493c811551208105353d55395608a1b60448201526064016101d9565b610d37346106db565b610d745760405162461bcd60e51b815260206004820152600e60248201526d10d0539393d50811115413d4d25560921b60448201526064016101d9565b6000610d7e611330565b90506000610d8a610a98565b50509050610d99813384611283565b60405182815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a2509050610a956001600055565b600046600103610dfe575073bafa44efe7901e04e39dad13167d089c559c113890565b466005036104f05750736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b6000466001036104f057507f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b600260005403610ea05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101d9565b6002600055565b6040516001600160a01b0380851660248301528316604482015260648101829052610f129085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611394565b50505050565b600080610f23610c9e565b9050610f2d610c5a565b60405163095ea7b360e01b81526001600160a01b03838116600483015260248201869052919091169063095ea7b3906044016020604051808303816000875af1158015610f7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa29190611789565b50610fab6115f6565b7f1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112815260006020820152610fdd610c5a565b6001600160a01b03166040820152610ff36104ac565b6001600160a01b031660608201526080810184905260408051602081019091526000815260a082015261104660408051608081018252600080825260208201819052918101829052606081019190915290565b308082526000602083018190526040808401929092526060830181905290516352bbbe2960e01b81526001600160a01b038516906352bbbe2990611094908690869086904290600401611871565b6020604051808303816000875af11580156110b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d791906117ab565b90506110e16104ac565b6001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040161110e91815260200190565b600060405180830381600087803b15801561112857600080fd5b505af115801561113c573d6000803e3d6000fd5b509298975050505050505050565b600080611155610c9e565b905061115f6115f6565b7f1e19cf2d73a72ef1332c882f20534b6519be027600020000000000000000011281526000602082018190526040820152611198610c5a565b6001600160a01b0316606082015234608082015260408051602081019091526000815260a08201526111ea60408051608081018252600080825260208201819052918101829052606081019190915290565b308082526000602083018190526040808401929092526060830181905290516352bbbe2960e01b81526001600160a01b038516916352bbbe2991349161123891879187914290600401611871565b60206040518083038185885af1158015611256573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061127b91906117ab565b935050505090565b6040516001600160a01b0383166024820152604481018290526112b390849063a9059cbb60e01b90606401610edb565b505050565b60006112c26106b8565b6001600160a01b03166321f8a721836040518263ffffffff1660e01b81526004016112ef91815260200190565b602060405180830381865afa15801561130c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6f919061194f565b600061133a6109e3565b6001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561137457600080fd5b505af1158015611388573d6000803e3d6000fd5b50505050506000905090565b60006113e9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114669092919063ffffffff16565b8051909150156112b357808060200190518101906114079190611789565b6112b35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101d9565b6060611475848460008561147d565b949350505050565b6060824710156114de5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101d9565b600080866001600160a01b031685876040516114fa9190611978565b60006040518083038185875af1925050503d8060008114611537576040519150601f19603f3d011682016040523d82523d6000602084013e61153c565b606091505b509150915061154d87838387611558565b979650505050505050565b606083156115c75782516000036115c0576001600160a01b0385163b6115c05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101d9565b5081611475565b61147583838151156115dc5781518083602001fd5b8060405162461bcd60e51b81526004016101d991906116a8565b6040805160c0810190915260008082526020820190815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001606081525090565b60006020828403121561165157600080fd5b5035919050565b60005b8381101561167357818101518382015260200161165b565b50506000910152565b60008151808452611694816020860160208601611658565b601f01601f19169290920160200192915050565b6020815260006116bb602083018461167c565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156116ea57600080fd5b813567ffffffffffffffff8082111561170257600080fd5b818401915084601f83011261171657600080fd5b813581811115611728576117286116c2565b604051601f8201601f19908116603f01168101908382118183101715611750576117506116c2565b8160405282815287602084870101111561176957600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561179b57600080fd5b815180151581146116bb57600080fd5b6000602082840312156117bd57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610b6f57610b6f6117c4565b6f636f6e74726163742e6164647265737360801b815260008251611818816010850160208701611658565b9190910160100192915050565b81810381811115610b6f57610b6f6117c4565b8082028115828204841417610b6f57610b6f6117c4565b60008261186c57634e487b7160e01b600052601260045260246000fd5b500490565b60e08152845160e082015260006020860151600281106118a157634e487b7160e01b600052602160045260246000fd5b61010083015260408601516001600160a01b031661012083015260608601516118d66101408401826001600160a01b03169052565b50608086015161016083015260a086015160c06101808401526118fd6101a084018261167c565b91505061193d602083018680516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60a082019390935260c0015292915050565b60006020828403121561196157600080fd5b81516001600160a01b03811681146116bb57600080fd5b6000825161198a818460208701611658565b919091019291505056fea2646970667358221220a255ba327812711ff335a791dbb326072d8ac6316cb8aacb8135f59f3dd3d6d664736f6c63430008110033";

type RocketPoolAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RocketPoolAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RocketPoolAdapter__factory extends ContractFactory {
  constructor(...args: RocketPoolAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RocketPoolAdapter> {
    return super.deploy(overrides || {}) as Promise<RocketPoolAdapter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RocketPoolAdapter {
    return super.attach(address) as RocketPoolAdapter;
  }
  override connect(signer: Signer): RocketPoolAdapter__factory {
    return super.connect(signer) as RocketPoolAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RocketPoolAdapterInterface {
    return new utils.Interface(_abi) as RocketPoolAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RocketPoolAdapter {
    return new Contract(address, _abi, signerOrProvider) as RocketPoolAdapter;
  }
}
