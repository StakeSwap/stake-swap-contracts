/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  RocketPoolAdapter,
  RocketPoolAdapterInterface,
} from "../RocketPoolAdapter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_rETH_ETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_stETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adaptorName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "buyToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRocketDAOProtocolSettingsDeposit",
    outputs: [
      {
        internalType: "contract RocketDAOProtocolSettingsDepositInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRocketDrocketDepositPool",
    outputs: [
      {
        internalType: "contract RocketDepositPoolInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_contractName",
        type: "string",
      },
    ],
    name: "getRocketPoolContractAddresst",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRocketVault",
    outputs: [
      {
        internalType: "contract RocketVaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "token2",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rocketPoolStorage",
    outputs: [
      {
        internalType: "contract RocketStorageInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040524260805234801561001457600080fd5b506001600055608051611a7a61003260003960005050611a7a6000f3fe6080604052600436106101c65760003560e01c80639eb0506c116100f7578063c54505ca11610095578063ce06961411610064578063ce069614146104f8578063d0e30db01461050d578063ebdfda5e14610515578063f2cd3a121461052a57600080fd5b8063c54505ca14610499578063c89d5b8b146104b9578063c9ac8c8e146104ce578063ca8aa0e4146104e357600080fd5b8063aaf5eb68116100d1578063aaf5eb681461043f578063ad5c46481461045b578063b51459fe14610470578063c1fe3e481461048457600080fd5b80639eb0506c146103e3578063a4821719146103f8578063aa6ca8081461040057600080fd5b80634aa07e64116101645780635a33bbbe1161013e5780635a33bbbe1461036b5780636718cdea14610380578063698e0796146103955780638c9adb2d146103aa57600080fd5b80634aa07e641461032c5780634bc0dcb614610341578063565d3e6e1461035657600080fd5b806323c34a64116101a057806323c34a64146102b25780632e1a7d4d146102c7578063353d60e3146102e757806339443b8e146102fc57600080fd5b8063020b627d1461022a5780630aa22427146102575780632397e4d71461028457600080fd5b36610225576101d361053f565b6001600160a01b0316336001600160a01b0316146102235760405162461bcd60e51b815260206004820152600860248201526709c9ea840ae8aa8960c31b60448201526064015b60405180910390fd5b005b600080fd5b34801561023657600080fd5b5061023f6105be565b604051600f9190910b81526020015b60405180910390f35b34801561026357600080fd5b5061026c6105ce565b6040516001600160a01b03909116815260200161024e565b34801561029057600080fd5b506102a461029f3660046116ef565b610613565b60405190815260200161024e565b3480156102be57600080fd5b506102a4610693565b3480156102d357600080fd5b506102a46102e23660046116ef565b6106c2565b3480156102f357600080fd5b5061026c61078a565b34801561030857600080fd5b5061031c6103173660046116ef565b6107ad565b604051901515815260200161024e565b34801561033857600080fd5b5061026c6109b9565b34801561034d57600080fd5b5061026c6109fd565b34801561036257600080fd5b5061026c610a20565b34801561037757600080fd5b5061023f610a64565b34801561038c57600080fd5b5061026c610a74565b3480156103a157600080fd5b5061026c610aa2565b3480156103b657600080fd5b50604080518082018252600a8152691c9bd8dad95d1c1bdbdb60b21b6020820152905161024e9190611758565b3480156103ef57600080fd5b5061026c610ac5565b6102a4610af9565b34801561040c57600080fd5b50610415610b7a565b604080516001600160a01b039485168152928416602084015292169181019190915260600161024e565b34801561044b57600080fd5b506102a4670de0b6b3a764000081565b34801561046757600080fd5b5061026c61053f565b34801561047c57600080fd5b50600061031c565b34801561049057600080fd5b5061026c610b8e565b3480156104a557600080fd5b5061026c6104b4366004611788565b610bd2565b3480156104c557600080fd5b506102a4610c57565b3480156104da57600080fd5b5061026c610d19565b3480156104ef57600080fd5b5061026c610d3c565b34801561050457600080fd5b5061026c610d80565b6102a4610dc4565b34801561052157600080fd5b5061026c610ebd565b34801561053657600080fd5b506102a4610f01565b600046600103610562575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b46600503610583575073b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b604482015260640161021a565b6000466001036105835750600190565b600061060e6040518060400160405280602081526020017f726f636b657444414f50726f746f636f6c53657474696e67734465706f736974815250610bd2565b905090565b600061061d610f30565b6000821161065b5760405162461bcd60e51b815260206004820152600b60248201526a16915493c8105353d5539560aa1b604482015260640161021a565b6000610665610b7a565b5050905061067581333086610f89565b600061068084610ffa565b9250505061068e6001600055565b919050565b60004660010361058357507f1e19cf2d73a72ef1332c882f20534b6519be027600020000000000000000011290565b60006106cc610f30565b6000821161070a5760405162461bcd60e51b815260206004820152600b60248201526a16915493c8105353d5539560aa1b604482015260640161021a565b610713826107ad565b6107505760405162461bcd60e51b815260206004820152600e60248201526d10d0539393d50811115413d4d25560921b604482015260640161021a565b60405162461bcd60e51b815260206004820152600f60248201526e43414e4e4f5420574954484452415760881b604482015260640161021a565b6000466001036105835750731d8f8f00cfa6758d7be78336684788fb0ee0fa4690565b6000806107b86105ce565b9050806001600160a01b0316636ada78476040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081c9190611839565b6108295750600092915050565b806001600160a01b031663035cf1426040518163ffffffff1660e01b8152600401602060405180830381865afa158015610867573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088b919061185b565b83101561089b5750600092915050565b60006108a5610a74565b9050816001600160a01b031663fd6ce89e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610909919061185b565b6040516335ee5f8760e01b81526020600482015260116024820152701c9bd8dad95d11195c1bdcda5d141bdbdb607a1b604482015285906001600160a01b038416906335ee5f8790606401602060405180830381865afa158015610971573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610995919061185b565b61099f919061188a565b11156109af575060009392505050565b5060019392505050565b6000466001036109dc5750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b466005036105835750736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b600046600103610583575073dc24316b9ae028f1497c275eb9192a3ea0f6702290565b600046600103610a435750735e8422345238f34275888049021821e8e08caa1f90565b466005036105835750733e04888b1c07a9805861c19551f7ed53145bd8d490565b6000466001036105835750600090565b600061060e6040518060400160405280600b81526020016a1c9bd8dad95d15985d5b1d60aa1b815250610bd2565b60004660010361058357507306325440d014e39736583c165c2963ba99faf14e90565b600061060e604051806040016040528060118152602001701c9bd8dad95d11195c1bdcda5d141bdbdb607a1b815250610bd2565b6000610b03610f30565b60003411610b455760405162461bcd60e51b815260206004820152600f60248201526e16915493c811551208105353d55395608a1b604482015260640161021a565b6000610b4f611213565b90506000610b5b610b7a565b50509050610b6a813384611333565b509050610b776001600055565b90565b6000806000610b87610d3c565b9250909192565b600046600103610bb1575073ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b466005036105835750731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b600080610c0483604051602001610be9919061189d565b60405160208183030381529060405280519060200120611368565b90506001600160a01b038116610c515760405162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081b9bdd08199bdd5b9960721b604482015260640161021a565b92915050565b600080610c62610d3c565b6001600160a01b031663e6aa216c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc3919061185b565b905080600003610cd557600091505090565b6000610ce56361554c7b426118d5565b905080610cfa670de0b6b3a7640000846118d5565b610d08906301e187e06118e8565b610d1291906118ff565b9250505090565b600046600103610a43575073ac3e018457b222d93114458476f3e3416abbe38f90565b600046600103610d5f575073ae78736cd615f374d3085123a210448e74fc639390565b46600503610583575073ae78736cd615f374d3085123a210448e74fc639390565b600046600103610da3575073ba12222222228d8ba445958a75a0704d566bf2c890565b46600503610583575073ba12222222228d8ba445958a75a0704d566bf2c890565b6000610dce610f30565b60003411610e105760405162461bcd60e51b815260206004820152600f60248201526e16915493c811551208105353d55395608a1b604482015260640161021a565b610e19346107ad565b610e565760405162461bcd60e51b815260206004820152600e60248201526d10d0539393d50811115413d4d25560921b604482015260640161021a565b6000610e606113e0565b90506000610e6c610b7a565b50509050610e7b813384611333565b60405182815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a2509050610b776001600055565b600046600103610ee0575073bafa44efe7901e04e39dad13167d089c559c113890565b466005036105835750736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b60004660010361058357507f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b600260005403610f825760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161021a565b6002600055565b6040516001600160a01b0380851660248301528316604482015260648101829052610ff49085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611444565b50505050565b600080611005610d80565b905061100f610d3c565b60405163095ea7b360e01b81526001600160a01b03838116600483015260248201869052919091169063095ea7b3906044016020604051808303816000875af1158015611060573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110849190611839565b5061108d6116a6565b611095610693565b8152600060208201526110a6610d3c565b6001600160a01b031660408201526110bc61053f565b6001600160a01b031660608201526080810184905260408051602081019091526000815260a082015261110f60408051608081018252600080825260208201819052918101829052606081019190915290565b308082526000602083018190526040808401929092526060830181905290516352bbbe2960e01b81526001600160a01b038516906352bbbe299061115d908690869086904290600401611921565b6020604051808303816000875af115801561117c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a0919061185b565b90506111aa61053f565b6001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b81526004016111d791815260200190565b600060405180830381600087803b1580156111f157600080fd5b505af1158015611205573d6000803e3d6000fd5b509298975050505050505050565b60008061121e610d80565b90506112286116a6565b611230610693565b81526000602082018190526040820152611248610d3c565b6001600160a01b0316606082015234608082015260408051602081019091526000815260a082015261129a60408051608081018252600080825260208201819052918101829052606081019190915290565b308082526000602083018190526040808401929092526060830181905290516352bbbe2960e01b81526001600160a01b038516916352bbbe299134916112e891879187914290600401611921565b60206040518083038185885af1158015611306573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061132b919061185b565b935050505090565b6040516001600160a01b03831660248201526044810182905261136390849063a9059cbb60e01b90606401610fbd565b505050565b600061137261078a565b6001600160a01b03166321f8a721836040518263ffffffff1660e01b815260040161139f91815260200190565b602060405180830381865afa1580156113bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5191906119ff565b60006113ea610ac5565b6001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561142457600080fd5b505af1158015611438573d6000803e3d6000fd5b50505050506000905090565b6000611499826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115169092919063ffffffff16565b80519091501561136357808060200190518101906114b79190611839565b6113635760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161021a565b6060611525848460008561152d565b949350505050565b60608247101561158e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161021a565b600080866001600160a01b031685876040516115aa9190611a28565b60006040518083038185875af1925050503d80600081146115e7576040519150601f19603f3d011682016040523d82523d6000602084013e6115ec565b606091505b50915091506115fd87838387611608565b979650505050505050565b60608315611677578251600003611670576001600160a01b0385163b6116705760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161021a565b5081611525565b611525838381511561168c5781518083602001fd5b8060405162461bcd60e51b815260040161021a9190611758565b6040805160c0810190915260008082526020820190815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001606081525090565b60006020828403121561170157600080fd5b5035919050565b60005b8381101561172357818101518382015260200161170b565b50506000910152565b60008151808452611744816020860160208601611708565b601f01601f19169290920160200192915050565b60208152600061176b602083018461172c565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561179a57600080fd5b813567ffffffffffffffff808211156117b257600080fd5b818401915084601f8301126117c657600080fd5b8135818111156117d8576117d8611772565b604051601f8201601f19908116603f0116810190838211818310171561180057611800611772565b8160405282815287602084870101111561181957600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561184b57600080fd5b8151801515811461176b57600080fd5b60006020828403121561186d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c5157610c51611874565b6f636f6e74726163742e6164647265737360801b8152600082516118c8816010850160208701611708565b9190910160100192915050565b81810381811115610c5157610c51611874565b8082028115828204841417610c5157610c51611874565b60008261191c57634e487b7160e01b600052601260045260246000fd5b500490565b60e08152845160e0820152600060208601516002811061195157634e487b7160e01b600052602160045260246000fd5b61010083015260408601516001600160a01b031661012083015260608601516119866101408401826001600160a01b03169052565b50608086015161016083015260a086015160c06101808401526119ad6101a084018261172c565b9150506119ed602083018680516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60a082019390935260c0015292915050565b600060208284031215611a1157600080fd5b81516001600160a01b038116811461176b57600080fd5b60008251611a3a818460208701611708565b919091019291505056fea2646970667358221220c50e8cd1a0d3fa04ca6d0685eaddc22d8b10151af05562e9b1c0ac6eea0ad8e864736f6c63430008110033";

type RocketPoolAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RocketPoolAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RocketPoolAdapter__factory extends ContractFactory {
  constructor(...args: RocketPoolAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RocketPoolAdapter> {
    return super.deploy(overrides || {}) as Promise<RocketPoolAdapter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RocketPoolAdapter {
    return super.attach(address) as RocketPoolAdapter;
  }
  override connect(signer: Signer): RocketPoolAdapter__factory {
    return super.connect(signer) as RocketPoolAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RocketPoolAdapterInterface {
    return new utils.Interface(_abi) as RocketPoolAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RocketPoolAdapter {
    return new Contract(address, _abi, signerOrProvider) as RocketPoolAdapter;
  }
}
