/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  RocketPoolAdaptor,
  RocketPoolAdaptorInterface,
} from "../RocketPoolAdaptor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_rETH_ETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_frxETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_stETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adaptorName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "buyToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "getETHAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRocketDAOProtocolSettingsDeposit",
    outputs: [
      {
        internalType: "contract RocketDAOProtocolSettingsDepositInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRocketDrocketDepositPool",
    outputs: [
      {
        internalType: "contract RocketDepositPoolInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_contractName",
        type: "string",
      },
    ],
    name: "getRocketPoolContractAddresst",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRocketVault",
    outputs: [
      {
        internalType: "contract RocketVaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rocketPoolStorage",
    outputs: [
      {
        internalType: "contract RocketStorageInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040524260805234801561001457600080fd5b506001600055608051611b8661003260003960005050611b866000f3fe6080604052600436106101fd5760003560e01c8063aa6ca8081161010d578063c9ac8c8e116100a0578063d0e30db01161006f578063d0e30db0146104f7578063ebdfda5e146104ff578063ef46b2ab14610514578063f2cd3a1214610534578063f781b24e1461054957600080fd5b8063c9ac8c8e146104b8578063ca8aa0e4146104cd578063cbc74de714610209578063ce069614146104e257600080fd5b8063be78e8d9116100dc578063be78e8d91461034a578063c1fe3e481461046e578063c54505ca14610483578063c89d5b8b146104a357600080fd5b8063aa6ca808146103f4578063aaf5eb6814610429578063ad5c464814610445578063b51459fe1461045a57600080fd5b80634bc0dcb611610190578063698e07961161015f578063698e0796146103745780638c9adb2d146103895780639eb0506c146103c2578063a4821719146103d7578063aa6430c6146103df57600080fd5b80634bc0dcb614610320578063565d3e6e146103355780635a33bbbe1461034a5780636718cdea1461035f57600080fd5b80632e1a7d4d116101cc5780632e1a7d4d146102a6578063353d60e3146102c657806339443b8e146102db5780634aa07e641461030b57600080fd5b8063020b627d146102095780630aa22427146102365780632397e4d71461026357806323c34a641461029157600080fd5b3661020457005b600080fd5b34801561021557600080fd5b5061021e61055e565b604051600f9190910b81526020015b60405180910390f35b34801561024257600080fd5b5061024b6105ae565b6040516001600160a01b03909116815260200161022d565b34801561026f57600080fd5b5061028361027e3660046117fb565b6105f3565b60405190815260200161022d565b34801561029d57600080fd5b506102836106a2565b3480156102b257600080fd5b506102836102c13660046117fb565b6106d1565b3480156102d257600080fd5b5061024b610799565b3480156102e757600080fd5b506102fb6102f63660046117fb565b6107bc565b604051901515815260200161022d565b34801561031757600080fd5b5061024b6109c8565b34801561032c57600080fd5b5061024b610a0c565b34801561034157600080fd5b5061024b610a2f565b34801561035657600080fd5b5061021e610a73565b34801561036b57600080fd5b5061024b610a83565b34801561038057600080fd5b5061024b610ab1565b34801561039557600080fd5b50604080518082018252600a8152691c9bd8dad95d1c1bdbdb60b21b6020820152905161022d9190611864565b3480156103ce57600080fd5b5061024b610ad4565b610283610b08565b3480156103eb57600080fd5b5061024b610b88565b34801561040057600080fd5b50610409610bab565b604080516001600160a01b0393841681529290911660208301520161022d565b34801561043557600080fd5b50610283670de0b6b3a764000081565b34801561045157600080fd5b5061024b610bbc565b34801561046657600080fd5b5060006102fb565b34801561047a57600080fd5b5061024b610c00565b34801561048f57600080fd5b5061024b61049e366004611894565b610c44565b3480156104af57600080fd5b50610283610cc9565b3480156104c457600080fd5b5061024b610d8b565b3480156104d957600080fd5b5061024b610dae565b3480156104ee57600080fd5b5061024b610df2565b610283610e36565b34801561050b57600080fd5b5061024b610f2e565b34801561052057600080fd5b5061028361052f3660046117fb565b610f72565b34801561054057600080fd5b50610283610fea565b34801561055557600080fd5b5061024b611019565b60004660010361056e5750600190565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b60448201526064015b60405180910390fd5b60006105ee6040518060400160405280602081526020017f726f636b657444414f50726f746f636f6c53657474696e67734465706f736974815250610c44565b905090565b60006105fd61103c565b6000821161063b5760405162461bcd60e51b815260206004820152600b60248201526a16915493c8105353d5539560aa1b60448201526064016105a5565b6000610645610bab565b91505061065481333086611095565b600061065f84611106565b604051909150339082156108fc029083906000818181858888f1935050505015801561068f573d6000803e3d6000fd5b5091505061069d6001600055565b919050565b60004660010361056e57507f1e19cf2d73a72ef1332c882f20534b6519be027600020000000000000000011290565b60006106db61103c565b600082116107195760405162461bcd60e51b815260206004820152600b60248201526a16915493c8105353d5539560aa1b60448201526064016105a5565b610722826107bc565b61075f5760405162461bcd60e51b815260206004820152600e60248201526d10d0539393d50811115413d4d25560921b60448201526064016105a5565b60405162461bcd60e51b815260206004820152600f60248201526e43414e4e4f5420574954484452415760881b60448201526064016105a5565b60004660010361056e5750731d8f8f00cfa6758d7be78336684788fb0ee0fa4690565b6000806107c76105ae565b9050806001600160a01b0316636ada78476040518163ffffffff1660e01b8152600401602060405180830381865afa158015610807573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082b9190611945565b6108385750600092915050565b806001600160a01b031663035cf1426040518163ffffffff1660e01b8152600401602060405180830381865afa158015610876573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089a9190611967565b8310156108aa5750600092915050565b60006108b4610a83565b9050816001600160a01b031663fd6ce89e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109189190611967565b6040516335ee5f8760e01b81526020600482015260116024820152701c9bd8dad95d11195c1bdcda5d141bdbdb607a1b604482015285906001600160a01b038416906335ee5f8790606401602060405180830381865afa158015610980573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a49190611967565b6109ae9190611996565b11156109be575060009392505050565b5060019392505050565b6000466001036109eb5750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b4660050361056e5750736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b60004660010361056e575073dc24316b9ae028f1497c275eb9192a3ea0f6702290565b600046600103610a525750735e8422345238f34275888049021821e8e08caa1f90565b4660050361056e5750733e04888b1c07a9805861c19551f7ed53145bd8d490565b60004660010361056e5750600090565b60006105ee6040518060400160405280600b81526020016a1c9bd8dad95d15985d5b1d60aa1b815250610c44565b60004660010361056e57507306325440d014e39736583c165c2963ba99faf14e90565b60006105ee604051806040016040528060118152602001701c9bd8dad95d11195c1bdcda5d141bdbdb607a1b815250610c44565b6000610b1261103c565b60003411610b545760405162461bcd60e51b815260206004820152600f60248201526e16915493c811551208105353d55395608a1b60448201526064016105a5565b6000610b5e61131f565b90506000610b6a610bab565b915050610b7881338461143f565b509050610b856001600055565b90565b60004660010361056e575073a1f8a6807c402e4a15ef4eba36528a3fed24e57790565b600080610bb6610dae565b90509091565b600046600103610bdf575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b4660050361056e575073b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b600046600103610c23575073ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b4660050361056e5750731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b600080610c7683604051602001610c5b91906119a9565b60405160208183030381529060405280519060200120611474565b90506001600160a01b038116610cc35760405162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081b9bdd08199bdd5b9960721b60448201526064016105a5565b92915050565b600080610cd4610dae565b6001600160a01b031663e6aa216c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d359190611967565b905080600003610d4757600091505090565b6000610d576361554c7b426119e1565b905080610d6c670de0b6b3a7640000846119e1565b610d7a906301e187e06119f4565b610d849190611a0b565b9250505090565b600046600103610a52575073ac3e018457b222d93114458476f3e3416abbe38f90565b600046600103610dd1575073ae78736cd615f374d3085123a210448e74fc639390565b4660050361056e575073ae78736cd615f374d3085123a210448e74fc639390565b600046600103610e15575073ba12222222228d8ba445958a75a0704d566bf2c890565b4660050361056e575073ba12222222228d8ba445958a75a0704d566bf2c890565b6000610e4061103c565b60003411610e825760405162461bcd60e51b815260206004820152600f60248201526e16915493c811551208105353d55395608a1b60448201526064016105a5565b610e8b346107bc565b610ec85760405162461bcd60e51b815260206004820152600e60248201526d10d0539393d50811115413d4d25560921b60448201526064016105a5565b6000610ed26114ec565b90506000610ede610bab565b915050610eec81338461143f565b60405182815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a2509050610b856001600055565b600046600103610f51575073bafa44efe7901e04e39dad13167d089c559c113890565b4660050361056e5750736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b6000610f7c610dae565b6001600160a01b0316638b32fa23836040518263ffffffff1660e01b8152600401610fa991815260200190565b602060405180830381865afa158015610fc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc39190611967565b60004660010361056e57507f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b60004660010361056e575073f43211935c781d5ca1a41d2041f397b8a7366c7a90565b60026000540361108e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105a5565b6002600055565b6040516001600160a01b03808516602483015283166044820152606481018290526111009085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611550565b50505050565b600080611111610df2565b905061111b610dae565b60405163095ea7b360e01b81526001600160a01b03838116600483015260248201869052919091169063095ea7b3906044016020604051808303816000875af115801561116c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111909190611945565b506111996117b2565b6111a16106a2565b8152600060208201526111b2610dae565b6001600160a01b031660408201526111c8610bbc565b6001600160a01b031660608201526080810184905260408051602081019091526000815260a082015261121b60408051608081018252600080825260208201819052918101829052606081019190915290565b308082526000602083018190526040808401929092526060830181905290516352bbbe2960e01b81526001600160a01b038516906352bbbe2990611269908690869086904290600401611a2d565b6020604051808303816000875af1158015611288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ac9190611967565b90506112b6610bbc565b6001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b81526004016112e391815260200190565b600060405180830381600087803b1580156112fd57600080fd5b505af1158015611311573d6000803e3d6000fd5b509298975050505050505050565b60008061132a610df2565b90506113346117b2565b61133c6106a2565b81526000602082018190526040820152611354610dae565b6001600160a01b0316606082015234608082015260408051602081019091526000815260a08201526113a660408051608081018252600080825260208201819052918101829052606081019190915290565b308082526000602083018190526040808401929092526060830181905290516352bbbe2960e01b81526001600160a01b038516916352bbbe299134916113f491879187914290600401611a2d565b60206040518083038185885af1158015611412573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906114379190611967565b935050505090565b6040516001600160a01b03831660248201526044810182905261146f90849063a9059cbb60e01b906064016110c9565b505050565b600061147e610799565b6001600160a01b03166321f8a721836040518263ffffffff1660e01b81526004016114ab91815260200190565b602060405180830381865afa1580156114c8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc39190611b0b565b60006114f6610ad4565b6001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561153057600080fd5b505af1158015611544573d6000803e3d6000fd5b50505050506000905090565b60006115a5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116229092919063ffffffff16565b80519091501561146f57808060200190518101906115c39190611945565b61146f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105a5565b60606116318484600085611639565b949350505050565b60608247101561169a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105a5565b600080866001600160a01b031685876040516116b69190611b34565b60006040518083038185875af1925050503d80600081146116f3576040519150601f19603f3d011682016040523d82523d6000602084013e6116f8565b606091505b509150915061170987838387611714565b979650505050505050565b6060831561178357825160000361177c576001600160a01b0385163b61177c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105a5565b5081611631565b61163183838151156117985781518083602001fd5b8060405162461bcd60e51b81526004016105a59190611864565b6040805160c0810190915260008082526020820190815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001606081525090565b60006020828403121561180d57600080fd5b5035919050565b60005b8381101561182f578181015183820152602001611817565b50506000910152565b60008151808452611850816020860160208601611814565b601f01601f19169290920160200192915050565b6020815260006118776020830184611838565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156118a657600080fd5b813567ffffffffffffffff808211156118be57600080fd5b818401915084601f8301126118d257600080fd5b8135818111156118e4576118e461187e565b604051601f8201601f19908116603f0116810190838211818310171561190c5761190c61187e565b8160405282815287602084870101111561192557600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561195757600080fd5b8151801515811461187757600080fd5b60006020828403121561197957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610cc357610cc3611980565b6f636f6e74726163742e6164647265737360801b8152600082516119d4816010850160208701611814565b9190910160100192915050565b81810381811115610cc357610cc3611980565b8082028115828204841417610cc357610cc3611980565b600082611a2857634e487b7160e01b600052601260045260246000fd5b500490565b60e08152845160e08201526000602086015160028110611a5d57634e487b7160e01b600052602160045260246000fd5b61010083015260408601516001600160a01b03166101208301526060860151611a926101408401826001600160a01b03169052565b50608086015161016083015260a086015160c0610180840152611ab96101a0840182611838565b915050611af9602083018680516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60a082019390935260c0015292915050565b600060208284031215611b1d57600080fd5b81516001600160a01b038116811461187757600080fd5b60008251611b46818460208701611814565b919091019291505056fea26469706673582212206a26d16be8cf8078a98b553995b899f1b343776a836a51b494d1f6bf9e173be964736f6c63430008110033";

type RocketPoolAdaptorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RocketPoolAdaptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RocketPoolAdaptor__factory extends ContractFactory {
  constructor(...args: RocketPoolAdaptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RocketPoolAdaptor> {
    return super.deploy(overrides || {}) as Promise<RocketPoolAdaptor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RocketPoolAdaptor {
    return super.attach(address) as RocketPoolAdaptor;
  }
  override connect(signer: Signer): RocketPoolAdaptor__factory {
    return super.connect(signer) as RocketPoolAdaptor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RocketPoolAdaptorInterface {
    return new utils.Interface(_abi) as RocketPoolAdaptorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RocketPoolAdaptor {
    return new Contract(address, _abi, signerOrProvider) as RocketPoolAdaptor;
  }
}
