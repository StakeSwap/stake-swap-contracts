/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_aggregator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_rETH_ETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_frxETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_stETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lp",
        type: "uint256",
      },
    ],
    name: "getEffectiveETHAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalEffectiveETHAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lp",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [
      {
        internalType: "uint256",
        name: "lp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolETHAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardToStaker",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001f0a38038062001f0a83398101604081905262000034916200014e565b60016000819055604080518082018252600a8152692ab734b9bbb0b8102b1960b11b60209182015281518083018352928352603160f81b9281019290925280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f928101929092527fbfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738908201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015246608082018190523060a08301529060c00160408051601f19818403018152919052805160209091012060045550336080526001600160a01b0391821660a0521660c05262000186565b80516001600160a01b03811681146200014957600080fd5b919050565b600080604083850312156200016257600080fd5b6200016d8362000131565b91506200017d6020840162000131565b90509250929050565b60805160a05160c051611d15620001f5600039600081816105870152818161089d01528181610afa01528181610bac01528181610bf201528181610d570152610d940152600081816103600152818161099f01528181610e7401526110490152600061061a0152611d156000f3fe6080604052600436106102295760003560e01c806395d89b4111610123578063c9ac8c8e116100ab578063d505accf1161006f578063d505accf14610690578063dd62ed3e146106b2578063ebdfda5e146106ea578063f2cd3a12146106ff578063f781b24e1461071457600080fd5b8063c9ac8c8e1461063c578063ca8aa0e414610651578063ca96cc2214610666578063cbc74de714610235578063ce0696141461067b57600080fd5b8063aa6430c6116100f2578063aa6430c6146105c9578063ad5c4648146105de578063be78e8d91461048a578063c1fe3e48146105f3578063c45a01551461060857600080fd5b806395d89b411461050e578063a694fc3a14610540578063a8aa1b3114610575578063a9059cbb146105a957600080fd5b806330adf81f116101b1578063565d3e6e11610175578063565d3e6e146104755780635a33bbbe1461048a578063698e07961461049f57806370a08231146104b45780637ecebe00146104e157600080fd5b806330adf81f146103da578063313ce5671461040e5780633644e515146104355780634aa07e641461044b5780634bc0dcb61461046057600080fd5b806321c49940116101f857806321c49940146102f957806323b872dd1461031957806323c34a6414610339578063245a7bfc1461034e5780632e17de781461039a57600080fd5b8063020b627d1461023557806306fdde0314610262578063095ea7b3146102a557806318160ddd146102d557600080fd5b3661023057005b600080fd5b34801561024157600080fd5b5061024a610729565b604051600f9190910b81526020015b60405180910390f35b34801561026e57600080fd5b506102986040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b81525081565b6040516102599190611a64565b3480156102b157600080fd5b506102c56102c0366004611ab3565b610779565b6040519015158152602001610259565b3480156102e157600080fd5b506102eb60015481565b604051908152602001610259565b34801561030557600080fd5b506102eb610314366004611add565b610790565b34801561032557600080fd5b506102c5610334366004611af6565b6107b2565b34801561034557600080fd5b506102eb610846565b34801561035a57600080fd5b506103827f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610259565b3480156103a657600080fd5b506103ba6103b5366004611add565b610875565b604080519485526020850193909352918301526060820152608001610259565b3480156103e657600080fd5b506102eb7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b34801561041a57600080fd5b50610423601281565b60405160ff9091168152602001610259565b34801561044157600080fd5b506102eb60045481565b34801561045757600080fd5b50610382610c69565b34801561046c57600080fd5b50610382610cad565b34801561048157600080fd5b50610382610cd0565b34801561049657600080fd5b5061024a610d14565b3480156104ab57600080fd5b50610382610d24565b3480156104c057600080fd5b506102eb6104cf366004611b32565b60026020526000908152604090205481565b3480156104ed57600080fd5b506102eb6104fc366004611b32565b60056020526000908152604090205481565b34801561051a57600080fd5b50610298604051806040016040528060068152602001652aa72496ab1960d11b81525081565b34801561054c57600080fd5b5061056061055b366004611add565b610d47565b60408051928352602083019190915201610259565b34801561058157600080fd5b506103827f000000000000000000000000000000000000000000000000000000000000000081565b3480156105b557600080fd5b506102c56105c4366004611ab3565b610f12565b3480156105d557600080fd5b50610382610f1f565b3480156105ea57600080fd5b50610382610f42565b3480156105ff57600080fd5b50610382610f86565b34801561061457600080fd5b506103827f000000000000000000000000000000000000000000000000000000000000000081565b34801561064857600080fd5b50610382610fca565b34801561065d57600080fd5b50610382610fed565b34801561067257600080fd5b506102eb611031565b34801561068757600080fd5b50610382611128565b34801561069c57600080fd5b506106b06106ab366004611b54565b61116c565b005b3480156106be57600080fd5b506102eb6106cd366004611bc7565b600360209081526000928352604080842090915290825290205481565b3480156106f657600080fd5b50610382611380565b34801561070b57600080fd5b506102eb6113c4565b34801561072057600080fd5b506103826113f3565b6000466001036107395750600190565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b60448201526064015b60405180910390fd5b6000610786338484611416565b5060015b92915050565b60006001548261079e611031565b6107a89190611c10565b61078a9190611c27565b6001600160a01b038316600090815260036020908152604080832033845290915281205460001914610831576001600160a01b038416600090815260036020908152604080832033845290915290205461080c9083611478565b6001600160a01b03851660009081526003602090815260408083203384529091529020555b61083c8484846114ce565b5060019392505050565b60004660010361073957507f1e19cf2d73a72ef1332c882f20534b6519be027600020000000000000000011290565b600080600080610883611574565b6001546040516370a0823160e01b815230600482015286907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156108ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109109190611c49565b61091a9190611c10565b6109249190611c27565b33600090815260066020908152604080832054600290925290912054919550908681116109895760405162461bcd60e51b8152602060048201526013602482015272494e53554646494349454e545f53484152455360681b6044820152606401610770565b60405163db006a7560e01b8152600481018890527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063db006a75906024016020604051808303816000875af11580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a149190611c49565b945080610a218884611c10565b610a2b9190611c27565b9350838511610a745760405162461bcd60e51b8152602060048201526015602482015274139151d05512559157d4d51052d157d49155d05491605a1b6044820152606401610770565b610a7e8486611c62565b9250610a88610f42565b6001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b158015610ac257600080fd5b505af1158015610ad6573d6000803e3d6000fd5b5050505050610ae3610f42565b60405163a9059cbb60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260248201879052919091169063a9059cbb906044016020604051808303816000875af1158015610b54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b789190611c75565b50604051339084156108fc029085906000818181858888f19350505050158015610ba6573d6000803e3d6000fd5b50610bd27f000000000000000000000000000000000000000000000000000000000000000033886115cd565b610bdc3388611635565b604051639efed7c160e01b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639efed7c190602401600060405180830381600087803b158015610c3e57600080fd5b505af1158015610c52573d6000803e3d6000fd5b505050505050610c626001600055565b9193509193565b600046600103610c8c5750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b466005036107395750736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b600046600103610739575073dc24316b9ae028f1497c275eb9192a3ea0f6702290565b600046600103610cf35750735e8422345238f34275888049021821e8e08caa1f90565b466005036107395750733e04888b1c07a9805861c19551f7ed53145bd8d490565b6000466001036107395750600090565b60004660010361073957507306325440d014e39736583c165c2963ba99faf14e90565b600080610d52611574565b610d7e7f00000000000000000000000000000000000000000000000000000000000000003330866116c7565b60405163393127a160e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063393127a1906024016020604051808303816000875af1158015610de5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e099190611c49565b5047905060008111610e4c5760405162461bcd60e51b815260206004820152600c60248201526b16915493d7d1115413d4d25560a21b6044820152606401610770565b3360009081526006602052604081208054839290610e6b908490611c97565b925050819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b815260040160206040518083038185885af1158015610ed2573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610ef79190611c49565b9150610f033383611705565b610f0d6001600055565b915091565b60006107863384846114ce565b600046600103610739575073a1f8a6807c402e4a15ef4eba36528a3fed24e57790565b600046600103610f65575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b46600503610739575073b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b600046600103610fa9575073ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b466005036107395750731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b600046600103610cf3575073ac3e018457b222d93114458476f3e3416abbe38f90565b600046600103611010575073ae78736cd615f374d3085123a210448e74fc639390565b46600503610739575073ae78736cd615f374d3085123a210448e74fc639390565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634cdad5069082906370a0823190602401602060405180830381865afa1580156110a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c49190611c49565b6040518263ffffffff1660e01b81526004016110e291815260200190565b602060405180830381865afa1580156110ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111239190611c49565b905090565b60004660010361114b575073ba12222222228d8ba445958a75a0704d566bf2c890565b46600503610739575073ba12222222228d8ba445958a75a0704d566bf2c890565b428410156111b15760405162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b6044820152606401610770565b6004546001600160a01b038816600090815260056020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b91908761120483611caa565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161127d92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156112e8573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061131e5750886001600160a01b0316816001600160a01b0316145b61136a5760405162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e4154555245000000006044820152606401610770565b611375898989611416565b505050505050505050565b6000466001036113a3575073bafa44efe7901e04e39dad13167d089c559c113890565b466005036107395750736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b60004660010361073957507f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b600046600103610739575073f43211935c781d5ca1a41d2041f397b8a7366c7a90565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000826114858382611c62565b915081111561078a5760405162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b6044820152606401610770565b6001600160a01b0383166000908152600260205260409020546114f19082611478565b6001600160a01b0380851660009081526002602052604080822093909355908416815220546115209082611789565b6001600160a01b0380841660008181526002602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061146b9085815260200190565b6002600054036115c65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610770565b6002600055565b6040516001600160a01b03831660248201526044810182905261163090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526117de565b505050565b6001600160a01b0382166000908152600260205260409020546116589082611478565b6001600160a01b03831660009081526002602052604090205560015461167e9082611478565b6001556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526116ff9085906323b872dd60e01b906084016115f9565b50505050565b6001546117129082611789565b6001556001600160a01b0382166000908152600260205260409020546117389082611789565b6001600160a01b0383166000818152600260205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906116bb9085815260200190565b6000826117968382611c97565b915081101561078a5760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b6044820152606401610770565b6000611833826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118b09092919063ffffffff16565b80519091501561163057808060200190518101906118519190611c75565b6116305760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610770565b60606118bf84846000856118c7565b949350505050565b6060824710156119285760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610770565b600080866001600160a01b031685876040516119449190611cc3565b60006040518083038185875af1925050503d8060008114611981576040519150601f19603f3d011682016040523d82523d6000602084013e611986565b606091505b5091509150611997878383876119a2565b979650505050505050565b60608315611a11578251600003611a0a576001600160a01b0385163b611a0a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610770565b50816118bf565b6118bf8383815115611a265781518083602001fd5b8060405162461bcd60e51b81526004016107709190611a64565b60005b83811015611a5b578181015183820152602001611a43565b50506000910152565b6020815260008251806020840152611a83816040850160208701611a40565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611aae57600080fd5b919050565b60008060408385031215611ac657600080fd5b611acf83611a97565b946020939093013593505050565b600060208284031215611aef57600080fd5b5035919050565b600080600060608486031215611b0b57600080fd5b611b1484611a97565b9250611b2260208501611a97565b9150604084013590509250925092565b600060208284031215611b4457600080fd5b611b4d82611a97565b9392505050565b600080600080600080600060e0888a031215611b6f57600080fd5b611b7888611a97565b9650611b8660208901611a97565b95506040880135945060608801359350608088013560ff81168114611baa57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611bda57600080fd5b611be383611a97565b9150611bf160208401611a97565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761078a5761078a611bfa565b600082611c4457634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611c5b57600080fd5b5051919050565b8181038181111561078a5761078a611bfa565b600060208284031215611c8757600080fd5b81518015158114611b4d57600080fd5b8082018082111561078a5761078a611bfa565b600060018201611cbc57611cbc611bfa565b5060010190565b60008251611cd5818460208701611a40565b919091019291505056fea2646970667358221220ca113c4c68a1285ad42537ff746819983038daca290cfd0317127650e94d104664736f6c63430008110033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _aggregator: PromiseOrValue<string>,
    _pair: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Staking> {
    return super.deploy(
      _aggregator,
      _pair,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    _aggregator: PromiseOrValue<string>,
    _pair: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_aggregator, _pair, overrides || {});
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
