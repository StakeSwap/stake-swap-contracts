/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LidoAdaptor,
  LidoAdaptorInterface,
} from "../../../src/adaptor/LidoAdaptor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_rETH_ETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_frxETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_stETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fromTokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int128",
        name: "fromTokenIndex",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "toTokenIndex",
        type: "int128",
      },
    ],
    name: "Curve_swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adaptorName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "buyToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "getETHAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "getTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0806040523461002557600160005542608052611913908161002b8239608051815050f35b600080fdfe60406080815260049081361015610020575b5050361561001e57600080fd5b005b600091823560e01c908163020b627d1461058a5781632397e4d714610a6e57816323c34a6414610a515781632e1a7d4d146109f457816339443b8e146109cb5781634aa07e64146109ae5781634bc0dcb614610991578163565d3e6e146109745781635a33bbbe146106d8578163698e07961461095757816389a302711461093a5781638c9adb2d146108f9578163a482171914610770578163aa6430c614610753578163aa6ca80814610724578163aaf5eb6814610701578163ad5c4648146106e4578163be78e8d9146106d8578163c1fe3e48146106bb578163c2507ac1146105f4578163c89d5b8b146105d7578163c9ac8c8e146105ba578163ca8aa0e41461059d578163cbc74de71461058a578163ce0696141461056d578163d0e30db01461033b578163d148d392146102d8578163e0bab4c4146102bb578163ebdfda5e1461029e578163ef46b2ab1461020257508063f2cd3a12146101df578063f781b24e146101b25763fbe85f060361001157346101ae5760203660031901126101ae5751908152602090f35b5080fd5b50346101ae57816003193601126101ae576020906101ce611708565b90516001600160a01b039091168152f35b50346101ae57816003193601126101ae576020906101fb61158c565b9051908152f35b8383346101ae576020928360031936011261029a57836001600160a01b036102286113be565b16916024845180948193632eca54bf60e21b83528035908301525afa92831561028f57809361025a575b505051908152f35b909192508382813d8311610288575b6102738183610d34565b81010312610285575051908380610252565b80fd5b503d610269565b8251903d90823e3d90fd5b8280fd5b5050346101ae57816003193601126101ae576020906101ce6114b1565b5050346101ae57816003193601126101ae576020906101ce6112b3565b905060a036600319011261029a57356001600160a01b038082168203610337576044359081168103610337576064359182600f0b8303610333576084359485600f0b8603610285575091602094916101fb9360243590611741565b8480fd5b8380fd5b9190508260031936011261029a57610351610cac565b61035c341515610c6e565b61036534610fd4565b15610539576001600160a01b03928361037c611365565b16938251809563a1903eab60e01b82528386830152816024602098899334905af190811561052f578391610502575b506103f68682846103ba611365565b16856103c46113be565b16878a8a519687958694859363095ea7b360e01b8552840160209093929193604081019460018060a01b031681520152565b03925af180156104f857908792916104c1575b506024836104156113be565b16968587519889948593630ea598cb60e41b85528401525af19384156104b7578294610486575b50906104558460019361044d6113be565b163390610d56565b82518481527f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4863392a25551908152f35b9093508481813d83116104b0575b61049e8183610d34565b810103126101ae57519261045561043c565b503d610494565b83513d84823e3d90fd5b909181813d83116104f1575b6104d78183610d34565b8101031261033757906104ea8792610da0565b5038610409565b503d6104cd565b85513d86823e3d90fd5b90508581813d8311610528575b6105198183610d34565b8101031261029a5751386103ab565b503d61050f565b84513d85823e3d90fd5b906020606492519162461bcd60e51b8352820152600e60248201526d10d0539393d50811115413d4d25560921b6044820152fd5b5050346101ae57816003193601126101ae576020906101ce61154b565b50505050610596610bdd565b3880610011565b5050346101ae57816003193601126101ae576020906101ce61150a565b5050346101ae57816003193601126101ae576020906101ce611470565b5050346101ae57816003193601126101ae576020906101fb61109f565b90503461029a576020928360031936011261028557813591670de0b6b3a7640000808402938085048214901517156106a857859060246001600160a01b0361063a6113be565b169387519485938492632eca54bf60e21b84528301525afa91821561069d57809261066b575b50506101fb91610f7a565b9091508482813d8311610696575b6106838183610d34565b810103126102855750516101fb38610660565b503d610679565b8451903d90823e3d90fd5b634e487b7160e01b835260118252602483fd5b5050346101ae57816003193601126101ae576020906101ce611365565b50505050610596610c09565b5050346101ae57816003193601126101ae576020906101ce61125a565b5050346101ae57816003193601126101ae5760209051670de0b6b3a76400008152f35b8284346102855780600319360112610285576001600160a01b036107466113be565b1682519182526020820152f35b5050346101ae57816003193601126101ae576020906101ce6116cf565b9190508260031936011261029a57610786610cac565b610791341515610c6e565b610799611616565b926107a261164f565b936107ab611670565b835195630f7c084960e21b8752600f0b85870152600f0b6024860152346044860152816064860152602094858160848160018060a01b0395863491165af190811561052f5783916108cc575b506108068682846103ba611365565b03925af180156104f85790879291610895575b506024836108256113be565b16968587519889948593630ea598cb60e41b85528401525af19384156104b7578294610864575b509061085d8460019361044d6113be565b5551908152f35b9093508481813d831161088e575b61087c8183610d34565b810103126101ae57519261085d61084c565b503d610872565b909181813d83116108c5575b6108ab8183610d34565b8101031261033757906108be8792610da0565b5038610819565b503d6108a1565b90508581813d83116108f2575b6108e38183610d34565b8101031261029a5751386107f7565b503d6108d9565b9190503461029a578260031936011261029a57610936925080519161091d83610d02565b8252636c69646f60e01b60208301525191829182610c25565b0390f35b5050346101ae57816003193601126101ae576020906101ce61130c565b5050346101ae57816003193601126101ae576020906101ce611696565b5050346101ae57816003193601126101ae576020906101ce611417565b5050346101ae57816003193601126101ae576020906101ce611616565b5050346101ae57816003193601126101ae576020906101ce6113be565b82843461028557602036600319011261028557506109eb60209235610fd4565b90519015158152f35b9050823461028557602036600319011261028557506020606492610a16610cac565b610a2283351515610f9a565b5162461bcd60e51b815291820152600f60248201526e43414e4e4f5420574954484452415760881b6044820152fd5b5050346101ae57816003193601126101ae576020906101fb6115d1565b8383346101ae576020928360031936011261029a57803590610a8e610cac565b610a99821515610f9a565b6001600160a01b039182610aab6113be565b85516323b872dd60e01b8982015233602482015230604482015260648082018590528152911660a0820167ffffffffffffffff811183821017610bca578652879291610af691610dad565b602484610b016113be565b16938787519586948593636f074d1f60e11b85528401525af1908115610bbd578491610b8e575b50610b5691610b35611365565b1690610b3f611616565b610b47611670565b91610b5061164f565b93611741565b918080848015610b84575b8280929181923390f115610b79576001905551908152f35b9051903d90823e3d90fd5b6108fc9150610b61565b90508481813d8311610bb6575b610ba58183610d34565b810103126103375751610b56610b28565b503d610b9b565b50505051903d90823e3d90fd5b634e487b7160e01b885260418552602488fd5b5034610c04576000366003190112610c04576020610bf9611670565b60405190600f0b8152f35b600080fd5b5034610c04576000366003190112610c04576020610bf961164f565b6020808252825181830181905290939260005b828110610c5a57505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610c38565b15610c7557565b60405162461bcd60e51b815260206004820152600f60248201526e16915493c811551208105353d55395608a1b6044820152606490fd5b600260005414610cbd576002600055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6040810190811067ffffffffffffffff821117610d1e57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610d1e57604052565b60405163a9059cbb60e01b60208201526001600160a01b0390921660248301526044820192909252610d9e91610d9982606481015b03601f198101845283610d34565b610dad565b565b51908115158203610c0457565b60018060a01b031690604051610dc281610d02565b6020928382527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564848301526000808486829651910182855af13d15610edb573d9167ffffffffffffffff8311610ec75790610e3d93929160405192610e3088601f19601f8401160185610d34565b83523d868885013e610ee5565b90815180610e4c575b50505050565b82849181010312610285575081610e639101610da0565b15610e7057808080610e46565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b634e487b7160e01b85526041600452602485fd5b90610e3d92916060915b91929015610f475750815115610ef9575090565b3b15610f025790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610f5a5750805190602001fd5b60405162461bcd60e51b8152908190610f769060048301610c25565b0390fd5b8115610f84570490565b634e487b7160e01b600052601260045260246000fd5b15610fa157565b60405162461bcd60e51b815260206004820152600b60248201526a16915493c8105353d5539560aa1b6044820152606490fd5b80156110995760049060e06001600160a01b03610fef611365565b166040519384809263665b4b0b851b82525afa91821561108d5760008091819461103e575b5061103657611025575b5050600190565b1161103157388061101e565b600090565b505050600090565b9350905060e0833d8211611085575b8161105a60e09383610d34565b81010312610285575061106c82610da0565b604061107a60208501610da0565b930151929038611014565b3d915061104d565b6040513d6000823e3d90fd5b50600090565b6001600160a01b03806110b06113be565b16604051809281926301afd7c160e11b8352602094859160049586915afa91821561108d57839185916000946111fb575b506110ea611365565b166040519283809263ced72f8760e01b82525afa93841561108d576000946111bf575b5050801561103657635fdbd4db194201904282116111aa57670de0b6b3a763ffff1981019081116111aa576301e187e0908181029181830414901517156111aa579061115891610f7a565b9061ffff61271093168303918383116111955782810292818404149015171561118057500490565b601190634e487b7160e01b6000525260246000fd5b601182634e487b7160e01b6000525260246000fd5b601183634e487b7160e01b6000525260246000fd5b81819593953d83116111f4575b6111d68183610d34565b810103126101ae57519061ffff82168203610285575091388061110d565b503d6111cc565b809350829194923d8311611228575b6112148183610d34565b8101031261028557508383915192386110e1565b503d61120a565b60609060208152601060208201526f1d5b9adb9bdddb8818da185a5b881a5960821b60408201520190565b6001461461129b57600546146112835760405162461bcd60e51b815280610f766004820161122f565b73b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b600146146112f457600546146112dc5760405162461bcd60e51b815280610f766004820161122f565b7373967c6a0904aa032c103b4104747e88c566b1a290565b736b175474e89094c44da98b954eedeac495271d0f90565b6001461461134d57600546146113355760405162461bcd60e51b815280610f766004820161122f565b732f3a40a3db8a7e3d09b0adfefbce4f6f8192755790565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4890565b600146146113a6576005461461138e5760405162461bcd60e51b815280610f766004820161122f565b731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b73ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b600146146113ff57600546146113e75760405162461bcd60e51b815280610f766004820161122f565b736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b6001461461145857600546146114405760405162461bcd60e51b815280610f766004820161122f565b733e04888b1c07a9805861c19551f7ed53145bd8d490565b735e8422345238f34275888049021821e8e08caa1f90565b6001461461149957600546146114405760405162461bcd60e51b815280610f766004820161122f565b73ac3e018457b222d93114458476f3e3416abbe38f90565b600146146114f257600546146114da5760405162461bcd60e51b815280610f766004820161122f565b736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b73bafa44efe7901e04e39dad13167d089c559c113890565b6001461461153357600546146115335760405162461bcd60e51b815280610f766004820161122f565b73ae78736cd615f374d3085123a210448e74fc639390565b6001461461157457600546146115745760405162461bcd60e51b815280610f766004820161122f565b73ba12222222228d8ba445958a75a0704d566bf2c890565b600146146115ad5760405162461bcd60e51b815280610f766004820161122f565b7f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b600146146115f25760405162461bcd60e51b815280610f766004820161122f565b7f1e19cf2d73a72ef1332c882f20534b6519be027600020000000000000000011290565b600146146116375760405162461bcd60e51b815280610f766004820161122f565b73dc24316b9ae028f1497c275eb9192a3ea0f6702290565b600146146110315760405162461bcd60e51b815280610f766004820161122f565b600146146116915760405162461bcd60e51b815280610f766004820161122f565b600190565b600146146116b75760405162461bcd60e51b815280610f766004820161122f565b7306325440d014e39736583c165c2963ba99faf14e90565b600146146116f05760405162461bcd60e51b815280610f766004820161122f565b73a1f8a6807c402e4a15ef4eba36528a3fed24e57790565b600146146117295760405162461bcd60e51b815280610f766004820161122f565b73f43211935c781d5ca1a41d2041f397b8a7366c7a90565b90939192906001600160a01b039081166000816117d55750509060209360849234915b6040519788968795630f7c084960e21b8752600f0b6004870152600f0b6024860152604485015260006064850152165af190811561108d576000916117a7575090565b906020823d82116117cd575b816117c060209383610d34565b8101031261028557505190565b3d91506117b3565b90929186158015611890575b1561182c5760405163095ea7b360e01b6020828101919091526001600160a01b03881660248301526044820189905296608495909161182791610d998260648101610d8b565b611764565b60405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608490fd5b50604051636eb1769f60e11b81523060048201528682166024820152602081604481885afa9081156118fb5783916118ca575b50156117e1565b90506020813d82116118f3575b816118e460209383610d34565b8101031261029a5751386118c3565b3d91506118d7565b6040513d85823e3d90fdfea164736f6c6343000811000a";

type LidoAdaptorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LidoAdaptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LidoAdaptor__factory extends ContractFactory {
  constructor(...args: LidoAdaptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LidoAdaptor> {
    return super.deploy(overrides || {}) as Promise<LidoAdaptor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LidoAdaptor {
    return super.attach(address) as LidoAdaptor;
  }
  override connect(signer: Signer): LidoAdaptor__factory {
    return super.connect(signer) as LidoAdaptor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LidoAdaptorInterface {
    return new utils.Interface(_abi) as LidoAdaptorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LidoAdaptor {
    return new Contract(address, _abi, signerOrProvider) as LidoAdaptor;
  }
}
