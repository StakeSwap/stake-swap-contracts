/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RocketPoolAdaptor,
  RocketPoolAdaptorInterface,
} from "../../../src/adaptor/RocketPoolAdaptor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_rETH_ETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_frxETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_stETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adaptorName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "buyToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "getETHAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRocketDAOProtocolSettingsDeposit",
    outputs: [
      {
        internalType: "contract RocketDAOProtocolSettingsDepositInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRocketDrocketDepositPool",
    outputs: [
      {
        internalType: "contract RocketDepositPoolInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_contractName",
        type: "string",
      },
    ],
    name: "getRocketPoolContractAddresst",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRocketVault",
    outputs: [
      {
        internalType: "contract RocketVaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "getTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rocketPoolStorage",
    outputs: [
      {
        internalType: "contract RocketStorageInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0806040523461002557600160005542608052611b85908161002b8239608051815050f35b600080fdfe60406080815260049081361015610020575b5050361561001e57600080fd5b005b600091823560e01c908163020b627d146104885781630aa2242714610cb95781632397e4d714610a3557816323c34a6414610a185781632e1a7d4d146109bb578163353d60e31461099e57816339443b8e146109755781634aa07e64146109585781634bc0dcb61461093b578163565d3e6e1461091e5781635a33bbbe1461064b5781636718cdea146108f6578163698e0796146108d957816389a30271146108bc5781638c9adb2d1461086e5781639eb0506c1461083e578163a4821719146106e3578163aa6430c6146106c6578163aa6ca80814610697578163aaf5eb6814610674578163ad5c464814610657578163be78e8d91461064b578163c1fe3e481461062e578163c2507ac114610569578163c54505ca146104f2578163c89d5b8b146104d5578163c9ac8c8e146104b8578163ca8aa0e41461049b578163cbc74de714610488578163ce0696141461046b578163d0e30db014610303578163e0bab4c4146102e6578163ebdfda5e146102c9578163ef46b2ab1461022e57508063f2cd3a121461020b578063f781b24e146101de5763fbe85f060361001157346101da5760203660031901126101da5751908152602090f35b5080fd5b50346101da57816003193601126101da576020906101fa611b3f565b90516001600160a01b039091168152f35b50346101da57816003193601126101da576020906102276119c3565b9051908152f35b919050346102c557602092836003193601126102b05750826001600160a01b03610256611941565b16926024835180958193638b32fa2360e01b83528035908301525afa9182156102ba57600092610288575b5051908152f35b90918382813d83116102b3575b61029f8183610dce565b810103126102b05750519038610281565b80fd5b503d610295565b50513d6000823e3d90fd5b8280fd5b5050346101da57816003193601126101da576020906101fa6118e8565b5050346101da57816003193601126101da576020906101fa6116ea565b8383816003193601126101da57610318610e4a565b610323341515610e0c565b61032c3461119d565b15610438576001600160a01b038061034a610345611110565b611588565b16803b1561043457838591845192838092630d0e30db60e41b825234905af1801561042757908491610413575b5050610381611941565b1681519363a9059cbb60e01b60208601523360248601526000604486015260448552608085019085821067ffffffffffffffff8311176103fe575082526020936103ca91610eb8565b80518281527f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4843392a26001825551908152f35b604190634e487b7160e01b6000525260246000fd5b61041c90610d6c565b6102c5578285610377565b50505051903d90823e3d90fd5b8380fd5b5162461bcd60e51b8152602081840152600e60248201526d10d0539393d50811115413d4d25560921b6044820152606490fd5b5050346101da57816003193601126101da576020906101fa611982565b50505050610494610ce1565b3880610011565b5050346101da57816003193601126101da576020906101fa611941565b5050346101da57816003193601126101da576020906101fa6118a7565b5050346101da57816003193601126101da576020906102276114c3565b9050346102c55760203660031901126102c55780359067ffffffffffffffff821161043457366023830112156104345781013561052e81610df0565b9161053b84519384610dce565b818352366024838301011161056557936020826101fa949360248398018386013783010152611588565b8480fd5b8284346102b057602092836003193601126101da57670de0b6b3a76400008135818102939080159085048314171561061b5750849060246001600160a01b036105b0611941565b169386519485938492638b32fa2360e01b84528301525afa908115610610576000916105e1575b5061022791611052565b908482813d8311610609575b6105f78183610dce565b810103126102b05750516102276105d7565b503d6105ed565b83513d6000823e3d90fd5b634e487b7160e01b815260118352602490fd5b5050346101da57816003193601126101da576020906101fa61179c565b50505050610494610d08565b5050346101da57816003193601126101da576020906101fa611691565b5050346101da57816003193601126101da5760209051670de0b6b3a76400008152f35b8284346102b057806003193601126102b0576001600160a01b036106b9611941565b1682519182526020820152f35b5050346101da57816003193601126101da576020906101fa611b06565b919050826003193601126102c55761079f91926106fe610e4a565b610709341515610e0c565b610711611982565b61071961138f565b90610722611a08565b82526020808301849052848301849052956001600160a01b039287929084610748611941565b166060820152346080820152865161075f81610d96565b86815260a082015261076f6113d5565b90308252868583015230888301528660608301528751988994859384936352bbbe2960e01b85524292850161140b565b0391853491165af19384156108345782946107fc575b50906107f56001926107c5611941565b855163a9059cbb60e01b898201523360248201526044808201899052815291166107f0606483610dce565b610eb8565b5551908152f35b919093508482813d831161082d575b6108158183610dce565b81010312610828579051926107f56107b5565b600080fd5b503d61080b565b83513d84823e3d90fd5b5050346101da57816003193601126101da576020906001600160a01b03610866610345611110565b169051908152f35b5050346101da57816003193601126101da5780516108b89161088f82610db2565b600a8252691c9bd8dad95d1c1bdbdb60b21b602083015251918291602083526020830190610d47565b0390f35b5050346101da57816003193601126101da576020906101fa611743565b5050346101da57816003193601126101da576020906101fa611acd565b5050346101da57816003193601126101da576020906001600160a01b03610866610345611176565b5050346101da57816003193601126101da576020906101fa61184e565b5050346101da57816003193601126101da576020906101fa611a4d565b5050346101da57816003193601126101da576020906101fa6117f5565b8284346102b05760203660031901126102b057506109956020923561119d565b90519015158152f35b5050346101da57816003193601126101da576020906101fa6110d7565b905082346102b05760203660031901126102b0575060206064926109dd610e4a565b6109e983351515611072565b5162461bcd60e51b815291820152600f60248201526e43414e4e4f5420574954484452415760881b6044820152fd5b5050346101da57816003193601126101da57602090610227611a08565b8383346101da57602091826003193601126102b057833593610a55610e4a565b610a60851515611072565b6001600160a01b0380610a71611941565b85516323b872dd60e01b8882015233602482015230604482015260648082018a90528152911660a0820167ffffffffffffffff811183821017610ca6578652610aba9190610eb8565b610ac2611982565b8386610b068480610ad1611941565b169416938a895194858094819363095ea7b360e01b8352898c840160209093929193604081019460018060a01b031681520152565b03925af18015610c9c5791879891610ba49893610c6f575b50610b2761138f565b91610b30611a08565b8352868484015284610b40611941565b168884015284610b4e611691565b16606084015260808301528651610b6481610d96565b86815260a0830152610b746113d5565b30815286848201523088820152866060820152868851809a819582946352bbbe2960e01b845242918b850161140b565b03925af1948515610c65578395610c36575b50610bbf611691565b1690813b156102c55784602484928387519586948593632e1a7d4d60e01b85528401525af1801561083457610c27575b508080848015610c1d575b8280929181923390f115610c12576001905551908152f35b9051903d90823e3d90fd5b6108fc9150610bfa565b610c3090610d6c565b84610bef565b9094508581813d8311610c5e575b610c4e8183610dce565b810103126102c557519386610bb6565b503d610c44565b84513d85823e3d90fd5b610c8e90843d8611610c95575b610c868183610dce565b810190610ea0565b5089610b1e565b503d610c7c565b86513d87823e3d90fd5b634e487b7160e01b865260418552602486fd5b5050346101da57816003193601126101da576020906001600160a01b0361086661034561113d565b5034610828576000366003190112610828576020610cfd611aa7565b60405190600f0b8152f35b5034610828576000366003190112610828576020610cfd611a86565b60005b838110610d375750506000910152565b8181015183820152602001610d27565b90602091610d6081518092818552858086019101610d24565b601f01601f1916010190565b67ffffffffffffffff8111610d8057604052565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff821117610d8057604052565b6040810190811067ffffffffffffffff821117610d8057604052565b90601f8019910116810190811067ffffffffffffffff821117610d8057604052565b67ffffffffffffffff8111610d8057601f01601f191660200190565b15610e1357565b60405162461bcd60e51b815260206004820152600f60248201526e16915493c811551208105353d55395608a1b6044820152606490fd5b600260005414610e5b576002600055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b90816020910312610828575180151581036108285790565b604051610f35916001600160a01b0316610ed182610db2565b6000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af13d15610fb1573d91610f1983610df0565b92610f276040519485610dce565b83523d60008785013e610fb5565b80519081610f4257505050565b8280610f52938301019101610ea0565b15610f5a5750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b6060915b919290156110175750815115610fc9575090565b3b15610fd25790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561102a5750805190602001fd5b60405162461bcd60e51b81526020600482015290819061104e906024830190610d47565b0390fd5b811561105c570490565b634e487b7160e01b600052601260045260246000fd5b1561107957565b60405162461bcd60e51b815260206004820152600b60248201526a16915493c8105353d5539560aa1b6044820152606490fd5b60609060208152601060208201526f1d5b9adb9bdddb8818da185a5b881a5960821b60408201520190565b600146146110f85760405162461bcd60e51b81528061104e600482016110ac565b731d8f8f00cfa6758d7be78336684788fb0ee0fa4690565b6040519061111d82610db2565b60118252701c9bd8dad95d11195c1bdcda5d141bdbdb607a1b6020830152565b6040519061114a82610db2565b602082527f726f636b657444414f50726f746f636f6c53657474696e67734465706f7369746020830152565b6040519061118382610db2565b600b82526a1c9bd8dad95d15985d5b1d60aa1b6020830152565b6001600160a01b03806111b161034561113d565b16604092835190636ada784760e01b82526020918281600481875afa90811561136757600091611372575b50156113305784516301ae78a160e11b81528281600481875afa9081156113675760009161133a575b508110611330578160649461121b610345611176565b168651958680926335ee5f8760e01b825284600483015260116024830152701c9bd8dad95d11195c1bdcda5d141bdbdb607a1b60448301525afa938415611325576000946112f6575b5083018093116112e05780600492855193848092637eb6744f60e11b82525afa9384156112d657506000936112a5575b5050116112a057600190565b600090565b8181949293943d83116112cf575b6112bd8183610dce565b810103126102b0575051903880611294565b503d6112b3565b513d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b90938282813d831161131e575b61130d8183610dce565b810103126102b05750519238611264565b503d611303565b85513d6000823e3d90fd5b5050505050600090565b908382813d8311611360575b6113508183610dce565b810103126102b057505138611205565b503d611346565b86513d6000823e3d90fd5b6113899150833d8511610c9557610c868183610dce565b386111dc565b6040519060c0820182811067ffffffffffffffff821117610d8057604052606060a083600081526000602082015260006040820152600083820152600060808201520152565b604051906080820182811067ffffffffffffffff821117610d805760405260006060838281528260208201528260408201520152565b939291909360e08152845160e0820152602085015160028110156114ad5760c09260609161010084015261147960a0600180821b03988960408201511661012087015289858201511661014087015260808101516101608701520151856101808601526101a0850190610d47565b9680825116602085015260208201511515604085015260408201511682840152015115156080820152600060a08201520152565b634e487b7160e01b600052602160045260246000fd5b600460206001600160a01b036114d7611941565b16604051928380926339aa885b60e21b82525afa90811561157c5760009161154b575b508015611545576361554c7a1942014281116112e057670de0b6b3a763ffff1982019182116112e0576301e187e0918281029281840414901517156112e05761154291611052565b90565b50600090565b906020823d8211611574575b8161156460209383610dce565b810103126102b0575051386114fa565b3d9150611557565b6040513d6000823e3d90fd5b604051906020916115d1603082858101946f636f6e74726163742e6164647265737360801b86526115c181518092898686019101610d24565b8101036010810184520182610dce565b519020906001600160a01b0381816115e76110d7565b16936024604051809681936321f8a72160e01b835260048301525afa92831561157c57600093611657575b5082161561161e575090565b6064906040519062461bcd60e51b82526004820152601260248201527110dbdb9d1c9858dd081b9bdd08199bdd5b9960721b6044820152fd5b8281819593953d831161168a575b61166f8183610dce565b810103126101da57519083821682036102b057509138611612565b503d611665565b600146146116d257600546146116ba5760405162461bcd60e51b81528061104e600482016110ac565b73b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b6001461461172b57600546146117135760405162461bcd60e51b81528061104e600482016110ac565b7373967c6a0904aa032c103b4104747e88c566b1a290565b736b175474e89094c44da98b954eedeac495271d0f90565b60014614611784576005461461176c5760405162461bcd60e51b81528061104e600482016110ac565b732f3a40a3db8a7e3d09b0adfefbce4f6f8192755790565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4890565b600146146117dd57600546146117c55760405162461bcd60e51b81528061104e600482016110ac565b731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b73ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b60014614611836576005461461181e5760405162461bcd60e51b81528061104e600482016110ac565b736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b6001461461188f57600546146118775760405162461bcd60e51b81528061104e600482016110ac565b733e04888b1c07a9805861c19551f7ed53145bd8d490565b735e8422345238f34275888049021821e8e08caa1f90565b600146146118d057600546146118775760405162461bcd60e51b81528061104e600482016110ac565b73ac3e018457b222d93114458476f3e3416abbe38f90565b6001461461192957600546146119115760405162461bcd60e51b81528061104e600482016110ac565b736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b73bafa44efe7901e04e39dad13167d089c559c113890565b6001461461196a576005461461196a5760405162461bcd60e51b81528061104e600482016110ac565b73ae78736cd615f374d3085123a210448e74fc639390565b600146146119ab57600546146119ab5760405162461bcd60e51b81528061104e600482016110ac565b73ba12222222228d8ba445958a75a0704d566bf2c890565b600146146119e45760405162461bcd60e51b81528061104e600482016110ac565b7f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b60014614611a295760405162461bcd60e51b81528061104e600482016110ac565b7f1e19cf2d73a72ef1332c882f20534b6519be027600020000000000000000011290565b60014614611a6e5760405162461bcd60e51b81528061104e600482016110ac565b73dc24316b9ae028f1497c275eb9192a3ea0f6702290565b600146146112a05760405162461bcd60e51b81528061104e600482016110ac565b60014614611ac85760405162461bcd60e51b81528061104e600482016110ac565b600190565b60014614611aee5760405162461bcd60e51b81528061104e600482016110ac565b7306325440d014e39736583c165c2963ba99faf14e90565b60014614611b275760405162461bcd60e51b81528061104e600482016110ac565b73a1f8a6807c402e4a15ef4eba36528a3fed24e57790565b60014614611b605760405162461bcd60e51b81528061104e600482016110ac565b73f43211935c781d5ca1a41d2041f397b8a7366c7a9056fea164736f6c6343000811000a";

type RocketPoolAdaptorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RocketPoolAdaptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RocketPoolAdaptor__factory extends ContractFactory {
  constructor(...args: RocketPoolAdaptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RocketPoolAdaptor> {
    return super.deploy(overrides || {}) as Promise<RocketPoolAdaptor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RocketPoolAdaptor {
    return super.attach(address) as RocketPoolAdaptor;
  }
  override connect(signer: Signer): RocketPoolAdaptor__factory {
    return super.connect(signer) as RocketPoolAdaptor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RocketPoolAdaptorInterface {
    return new utils.Interface(_abi) as RocketPoolAdaptorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RocketPoolAdaptor {
    return new Contract(address, _abi, signerOrProvider) as RocketPoolAdaptor;
  }
}
