/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { LP, LPInterface } from "../../../src/amm/LP";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100d257602081610018600a936100d7565b82815201692ab734b9bbb0b8102b1960b11b8152206001602060405161003d816100d7565b82815201603160f81b815220906040519160208301917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8352604084015260608301524660808301523060a083015260a0825260c082019180831060018060401b038411176100bc57826040525190206003556107ae90816100f38239f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b604081019081106001600160401b038211176100bc5760405256fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461056457508163095ea7b31461053a57816318160ddd1461051d57816323b872dd1461048d57816330adf81f14610452578163313ce567146104365781633644e5151461041757816370a08231146103df5781637ecebe00146103a557816395d89b4114610363578163a9059cbb14610332578163d505accf146100ff575063dd62ed3e146100b457600080fd5b346100fb57806003193601126100fb57806020926100d0610621565b6100d861063c565b6001600160a01b0391821683526002865283832091168252845220549051908152f35b5080fd5b839150346100fb5760e03660031901126100fb5761011b610621565b61012361063c565b906044359260643560843560ff811680910361032e574282106102f6576003549160018060a01b039182861693848a52856020528a8a209283549360001985146102e357908493929160018e960190558451938760208601967f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98852860152868b1660608601528b608086015260a085015260c084015260c0835260e0830167ffffffffffffffff94848210868311176102d057818e528451902061010085019261190160f01b845261010286015261012285015260428152610160840194818610908611176102bd57848d52519020835261018082015260a4356101a082015260c4356101c090910152878052602090889060809060015afa156102b3578651169081151591826102a9575b5050156102665750610263939450610652565b80f35b606490602087519162461bcd60e51b8352820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e4154555245000000006044820152fd5b1490508780610250565b87513d88823e3d90fd5b634e487b7160e01b8c526041885260248cfd5b634e487b7160e01b8d526041895260248dfd5b634e487b7160e01b8c526011885260248cfd5b875162461bcd60e51b81526020818501526012602482015271155b9a5cddd85c158c8e881156141254915160721b6044820152606490fd5b8680fd5b5050346100fb57806003193601126100fb5760209061035c610352610621565b60243590336106a9565b5160018152f35b5050346100fb57816003193601126100fb5780516103a191610384826105a6565b60068252652aa72496ab1960d11b602083015251918291826105d8565b0390f35b9050346103db5760203660031901126103db5760209282916001600160a01b036103cd610621565b168252845220549051908152f35b8280fd5b5050346100fb5760203660031901126100fb5760209181906001600160a01b03610407610621565b1681526001845220549051908152f35b5050346100fb57816003193601126100fb576020906003549051908152f35b5050346100fb57816003193601126100fb576020905160128152f35b5050346100fb57816003193601126100fb57602090517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98152f35b5050346100fb5760603660031901126100fb5761035c6104ab610621565b6104b361063c565b6044359160018060a01b0381168087528560209760028952818120338252895260001982822054036104e8575b5050506106a9565b828152600289528181203382528952610504868383205461077e565b92815260028952818120338252895220553885816104e0565b5050346100fb57816003193601126100fb57602091549051908152f35b5050346100fb57806003193601126100fb5760209061035c61055a610621565b6024359033610652565b849084346103db57826003193601126103db576103a19250610585826105a6565b600a8252692ab734b9bbb0b8102b1960b11b602083015251918291826105d8565b6040810190811067ffffffffffffffff8211176105c257604052565b634e487b7160e01b600052604160045260246000fd5b6020808252825181830181905290939260005b82811061060d57505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016105eb565b600435906001600160a01b038216820361063757565b600080fd5b602435906001600160a01b038216820361063757565b909160207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259160018060a01b03809416938460005260028352604060002095169485600052825280604060002055604051908152a3565b9160018060a01b038093169160009383855260016020526040916106d0848488205461077e565b858752600160205283872055169384815281812054908382019182811161076a57821061072f57917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93918184886020965260018652205551908152a3565b825162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b6044820152606490fd5b634e487b7160e01b82526011600452602482fd5b90810390811161078b5790565b634e487b7160e01b600052601160045260246000fdfea164736f6c6343000811000a";

type LPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LP__factory extends ContractFactory {
  constructor(...args: LPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LP> {
    return super.deploy(overrides || {}) as Promise<LP>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LP {
    return super.attach(address) as LP;
  }
  override connect(signer: Signer): LP__factory {
    return super.connect(signer) as LP__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPInterface {
    return new utils.Interface(_abi) as LPInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): LP {
    return new Contract(address, _abi, signerOrProvider) as LP;
  }
}
