/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Pair, PairInterface } from "../../../src/amm/Pair";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
    ],
    name: "Sync",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_rETH_ETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_frxETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_stETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINIMUM_LIQUIDITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint112",
        name: "_reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "_reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "_blockTimestampLast",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lp",
        type: "uint256",
      },
    ],
    name: "onStake",
    outputs: [
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "onUnstake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "price0CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedWETHAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526001600e5534801561001557600080fd5b50604080518082018252600a8152692ab734b9bbb0b8102b1960b11b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fbfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b03191633179055613001806101086000396000f3fe6080604052600436106102e85760003560e01c806389a3027111610190578063c514abf3116100dc578063d505accf11610095578063ebdfda5e1161006f578063ebdfda5e14610899578063f2cd3a12146108ae578063f781b24e146108c3578063fff6cae9146108d857600080fd5b8063d505accf1461082c578063dd62ed3e1461084c578063e0bab4c41461088457600080fd5b8063c514abf3146107b7578063c9ac8c8e146107cd578063ca8aa0e4146107e2578063cbc74de7146102f4578063ce069614146107f7578063d21220a71461080c57600080fd5b8063b1e5f8ed11610149578063be78e8d911610123578063be78e8d91461058e578063c0c53b8b14610762578063c1fe3e4814610782578063c45a01551461079757600080fd5b8063b1e5f8ed14610724578063ba9a7a561461072c578063bc25cf771461074257600080fd5b806389a302711461065e57806389afcb441461067357806395d89b41146106a8578063a9059cbb146106da578063aa6430c6146106fa578063ad5c46481461070f57600080fd5b8063393127a11161024f5780635a33bbbe116102085780636a627842116101e25780636a627842146105ce57806370a08231146105ee5780637464fc3d1461061b5780637ecebe001461063157600080fd5b80635a33bbbe1461058e5780635a3d5493146105a3578063698e0796146105b957600080fd5b8063393127a1146104f95780634aa07e64146105195780634bc0dcb61461052e5780634cf088d914610543578063565d3e6e146105635780635909c0d51461057857600080fd5b806318160ddd116102a157806318160ddd1461042f57806323b872dd1461045357806323c34a641461047357806330adf81f14610488578063313ce567146104bc5780633644e515146104e357600080fd5b8063020b627d146102f4578063022c0d9f1461032157806306fdde03146103435780630902f1ac14610386578063095ea7b3146103c75780630dfe1681146103f757600080fd5b366102ef57005b600080fd5b34801561030057600080fd5b506103096108ed565b604051600f9190910b81526020015b60405180910390f35b34801561032d57600080fd5b5061034161033c366004612b7c565b61093d565b005b34801561034f57600080fd5b506103796040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b81525081565b6040516103189190612c36565b34801561039257600080fd5b5061039b610e9b565b604080516001600160701b03948516815293909216602084015263ffffffff1690820152606001610318565b3480156103d357600080fd5b506103e76103e2366004612c69565b610ec5565b6040519015158152602001610318565b34801561040357600080fd5b50600754610417906001600160a01b031681565b6040516001600160a01b039091168152602001610318565b34801561043b57600080fd5b5061044560005481565b604051908152602001610318565b34801561045f57600080fd5b506103e761046e366004612c95565b610edc565b34801561047f57600080fd5b50610445610f70565b34801561049457600080fd5b506104457f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b3480156104c857600080fd5b506104d1601281565b60405160ff9091168152602001610318565b3480156104ef57600080fd5b5061044560035481565b34801561050557600080fd5b50610445610514366004612cd6565b610f9f565b34801561052557600080fd5b506104176112a7565b34801561053a57600080fd5b506104176112eb565b34801561054f57600080fd5b50600654610417906001600160a01b031681565b34801561056f57600080fd5b5061041761130e565b34801561058457600080fd5b50610445600b5481565b34801561059a57600080fd5b50610309611352565b3480156105af57600080fd5b50610445600c5481565b3480156105c557600080fd5b50610417611362565b3480156105da57600080fd5b506104456105e9366004612cef565b611385565b3480156105fa57600080fd5b50610445610609366004612cef565b60016020526000908152604090205481565b34801561062757600080fd5b50610445600d5481565b34801561063d57600080fd5b5061044561064c366004612cef565b60046020526000908152604090205481565b34801561066a57600080fd5b5061041761164f565b34801561067f57600080fd5b5061069361068e366004612cef565b611693565b60408051928352602083019190915201610318565b3480156106b457600080fd5b50610379604051806040016040528060068152602001652aa72496ab1960d11b81525081565b3480156106e657600080fd5b506103e76106f5366004612c69565b6119fb565b34801561070657600080fd5b50610417611a08565b34801561071b57600080fd5b50610417611a2b565b610341611a6f565b34801561073857600080fd5b506104456103e881565b34801561074e57600080fd5b5061034161075d366004612cef565b611b65565b34801561076e57600080fd5b5061034161077d366004612d0c565b611d2b565b34801561078e57600080fd5b50610417611dbb565b3480156107a357600080fd5b50600554610417906001600160a01b031681565b3480156107c357600080fd5b50610445600a5481565b3480156107d957600080fd5b50610417611dff565b3480156107ee57600080fd5b50610417611e22565b34801561080357600080fd5b50610417611e66565b34801561081857600080fd5b50600854610417906001600160a01b031681565b34801561083857600080fd5b50610341610847366004612d57565b611eaa565b34801561085857600080fd5b50610445610867366004612dce565b600260209081526000928352604080842090915290825290205481565b34801561089057600080fd5b506104176120be565b3480156108a557600080fd5b50610417612102565b3480156108ba57600080fd5b50610445612146565b3480156108cf57600080fd5b50610417612175565b3480156108e457600080fd5b50610341612198565b6000466001036108fd5750600190565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b60448201526064015b60405180910390fd5b600e5460011461095f5760405162461bcd60e51b815260040161093490612e07565b6000600e55841515806109725750600084115b6109cc5760405162461bcd60e51b815260206004820152602560248201527f556e697377617056323a20494e53554646494349454e545f4f55545055545f416044820152641353d5539560da1b6064820152608401610934565b6000806109d7610e9b565b5091509150816001600160701b0316871080156109fc5750806001600160701b031686105b610a525760405162461bcd60e51b815260206004820152602160248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152605960f81b6064820152608401610934565b60075460085460009182916001600160a01b03918216919081169089168214801590610a905750806001600160a01b0316896001600160a01b031614155b610ad45760405162461bcd60e51b8152602060048201526015602482015274556e697377617056323a20494e56414c49445f544f60581b6044820152606401610934565b8a15610ae557610ae5828a8d6122be565b8915610af657610af6818a8c6122be565b8615610b63576040516304347a1760e21b81526001600160a01b038a16906310d1e85c90610b309033908f908f908e908e90600401612e32565b600060405180830381600087803b158015610b4a57600080fd5b505af1158015610b5e573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610ba7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcb9190612e7e565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a0823190602401602060405180830381865afa158015610c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c369190612e7e565b600a54909350610c44611a2b565b6001600160a01b0316836001600160a01b031603610c6957610c668186612ead565b94505b610c71611a2b565b6001600160a01b0316826001600160a01b031603610c9657610c938185612ead565b93505b505050600089856001600160701b0316610cb09190612ec0565b8311610cbd576000610cda565b610cd08a6001600160701b038716612ec0565b610cda9084612ec0565b90506000610cf18a6001600160701b038716612ec0565b8311610cfe576000610d1b565b610d118a6001600160701b038716612ec0565b610d1b9084612ec0565b90506000821180610d2c5750600081115b610d845760405162461bcd60e51b8152602060048201526024808201527f556e697377617056323a20494e53554646494349454e545f494e5055545f414d60448201526313d5539560e21b6064820152608401610934565b6000610da6610d94846003612402565b610da0876103e8612402565b90612469565b90506000610db8610d94846003612402565b9050610ddd620f4240610dd76001600160701b038b8116908b16612402565b90612402565b610de78383612402565b1015610e245760405162461bcd60e51b815260206004820152600c60248201526b556e697377617056323a204b60a01b6044820152606401610934565b5050610e348484888860016124bf565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600e55505050505050505050565b6009546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610ed23384846126fb565b5060015b92915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610f5b576001600160a01b0384166000908152600260209081526040808320338452909152902054610f369083612469565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610f6684848461275d565b5060019392505050565b6000466001036108fd57507f1e19cf2d73a72ef1332c882f20534b6519be027600020000000000000000011290565b6006546000906001600160a01b03163314610fe65760405162461bcd60e51b815260206004820152600760248201526609c9ebe82aaa8960cb1b6044820152606401610934565b6000610ff0611a2b565b6007546001600160a01b039081169116149050600061100d611a2b565b6008546001600160a01b03908116911614905081806110295750805b6110645760405162461bcd60e51b815260206004820152600c60248201526b24a72b20a624a22fa820a4a960a11b6044820152606401610934565b60008261107c576008546001600160a01b0316611089565b6007546001600160a01b03165b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156110cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f39190612e7e565b90506000600a54826111059190612ead565b9050606460005487836111189190612ed3565b6111229190612f00565b61112d906032612ed3565b6111379190612f00565b94508482116111885760405162461bcd60e51b815260206004820152601860248201527f494e53554646494349454e545f4554485f42414c414e434500000000000000006044820152606401610934565b6111928583612ec0565b606461119f836032612ed3565b6111a99190612f00565b106111e45760405162461bcd60e51b815260206004820152600b60248201526a13d5915497d4d51052d15160aa1b6044820152606401610934565b84600a60008282546111f69190612ead565b909155506112049050611a2b565b6001600160a01b0316632e1a7d4d866040518263ffffffff1660e01b815260040161123191815260200190565b600060405180830381600087803b15801561124b57600080fd5b505af115801561125f573d6000803e3d6000fd5b50506006546040516001600160a01b03909116925087156108fc02915087906000818181858888f1935050505015801561129d573d6000803e3d6000fd5b5050505050919050565b6000466001036112ca5750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b466005036108fd5750736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b6000466001036108fd575073dc24316b9ae028f1497c275eb9192a3ea0f6702290565b6000466001036113315750735e8422345238f34275888049021821e8e08caa1f90565b466005036108fd5750733e04888b1c07a9805861c19551f7ed53145bd8d490565b6000466001036108fd5750600090565b6000466001036108fd57507306325440d014e39736583c165c2963ba99faf14e90565b6000600e546001146113a95760405162461bcd60e51b815260040161093490612e07565b6000600e819055806113b9610e9b565b506007546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561140b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142f9190612e7e565b6008546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561147d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a19190612e7e565b905060006114b8836001600160701b038716612469565b905060006114cf836001600160701b038716612469565b905060006114dd8787612803565b60008054919250819003611517576115036103e8610da06114fe8787612402565b612940565b985061151260006103e86129b0565b61155e565b61155b6001600160701b03891661152e8684612402565b6115389190612f00565b6001600160701b03891661154c8685612402565b6115569190612f00565b612a3f565b98505b600089116115bf5760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d3525395115160c21b6064820152608401610934565b6115c98a8a6129b0565b6115d786868a8a60006124bf565b8115611601576009546115fd906001600160701b0380821691600160701b900416612402565b600d555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600e5550949695505050505050565b600046600103611672575073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4890565b466005036108fd5750732f3a40a3db8a7e3d09b0adfefbce4f6f8192755790565b600080600e546001146116b85760405162461bcd60e51b815260040161093490612e07565b6000600e819055806116c8610e9b565b506007546008546040516370a0823160e01b81523060048201529395509193506001600160a01b039081169291169060009083906370a0823190602401602060405180830381865afa158015611722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117469190612e7e565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa158015611790573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b49190612e7e565b306000908152600160205260408120549192506117d18888612803565b600054909150806117e28487612402565b6117ec9190612f00565b9a50806117f98486612402565b6118039190612f00565b995060008b118015611815575060008a115b6118725760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d0955493915160c21b6064820152608401610934565b61187c3084612a57565b611887878d8d6122be565b611892868d8c6122be565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa1580156118d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fa9190612e7e565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a0823190602401602060405180830381865afa158015611941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119659190612e7e565b935061197585858b8b60006124bf565b811561199f5760095461199b906001600160701b0380821691600160701b900416612402565b600d555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600e81905550915091565b6000610ed233848461275d565b6000466001036108fd575073a1f8a6807c402e4a15ef4eba36528a3fed24e57790565b600046600103611a4e575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b466005036108fd575073b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b6006546001600160a01b03163314611ab35760405162461bcd60e51b815260206004820152600760248201526609c9ebe82aaa8960cb1b6044820152606401610934565b60003411611af05760405162461bcd60e51b815260206004820152600a6024820152695a45524f5f56414c554560b01b6044820152606401610934565b34600a6000828254611b029190612ec0565b90915550611b109050611a2b565b6001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015611b4a57600080fd5b505af1158015611b5e573d6000803e3d6000fd5b5050505050565b600e54600114611b875760405162461bcd60e51b815260040161093490612e07565b6000600e8190556007546008546040516370a0823160e01b81523060048201526001600160a01b039283169392909116919083906370a0823190602401602060405180830381865afa158015611be1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c059190612e7e565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa158015611c4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c739190612e7e565b9050611c7d611a2b565b6001600160a01b0316846001600160a01b031603611ca557600a54611ca29083612ead565b91505b611cad611a2b565b6001600160a01b0316836001600160a01b031603611cd557600a54611cd29082612ead565b90505b600954611cf99085908790611cf49086906001600160701b0316612469565b6122be565b600954611d1f9084908790611cf4908590600160701b90046001600160701b0316612469565b50506001600e55505050565b6005546001600160a01b03163314611d7c5760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b6044820152606401610934565b600780546001600160a01b039485166001600160a01b031991821617909155600880549385169382169390931790925560068054919093169116179055565b600046600103611dde575073ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b466005036108fd5750731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b600046600103611331575073ac3e018457b222d93114458476f3e3416abbe38f90565b600046600103611e45575073ae78736cd615f374d3085123a210448e74fc639390565b466005036108fd575073ae78736cd615f374d3085123a210448e74fc639390565b600046600103611e89575073ba12222222228d8ba445958a75a0704d566bf2c890565b466005036108fd575073ba12222222228d8ba445958a75a0704d566bf2c890565b42841015611eef5760405162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b6044820152606401610934565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b919087611f4283612f14565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001611fbb92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015612026573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061205c5750886001600160a01b0316816001600160a01b0316145b6120a85760405162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e4154555245000000006044820152606401610934565b6120b38989896126fb565b505050505050505050565b6000466001036120e15750736b175474e89094c44da98b954eedeac495271d0f90565b466005036108fd57507373967c6a0904aa032c103b4104747e88c566b1a290565b600046600103612125575073bafa44efe7901e04e39dad13167d089c559c113890565b466005036108fd5750736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b6000466001036108fd57507f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b6000466001036108fd575073f43211935c781d5ca1a41d2041f397b8a7366c7a90565b600e546001146121ba5760405162461bcd60e51b815260040161093490612e07565b6000600e556007546040516370a0823160e01b81523060048201526122b7916001600160a01b0316906370a0823190602401602060405180830381865afa158015612209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061222d9190612e7e565b6008546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015612275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122999190612e7e565b6009546001600160701b0380821691600160701b90041660006124bf565b6001600e55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1790529151600092839287169161234a9190612f2d565b6000604051808303816000865af19150503d8060008114612387576040519150601f19603f3d011682016040523d82523d6000602084013e61238c565b606091505b50915091508180156123b65750805115806123b65750808060200190518101906123b69190612f49565b611b5e5760405162461bcd60e51b815260206004820152601a60248201527f556e697377617056323a205452414e534645525f4641494c45440000000000006044820152606401610934565b6000811580612426575082826124188183612ed3565b92506124249083612f00565b145b610ed65760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b6044820152606401610934565b6000826124768382612ec0565b9150811115610ed65760405162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b6044820152606401610934565b8061251e576124cc611a2b565b6007546001600160a01b039182169116036124f157600a546124ee9086612ead565b94505b6124f9611a2b565b6008546001600160a01b0391821691160361251e57600a5461251b9085612ead565b93505b6001600160701b03851180159061253c57506001600160701b038411155b61257e5760405162461bcd60e51b8152602060048201526013602482015272556e697377617056323a204f564552464c4f5760681b6044820152606401610934565b600061258f64010000000042612f6b565b60095490915063ffffffff600160e01b90910481168203908116158015906125bf57506001600160701b03851615155b80156125d357506001600160701b03841615155b15612662578063ffffffff166125fb866125ec87612ae1565b6001600160e01b031690612afa565b6001600160e01b031661260e9190612ed3565b600b600082825461261f9190612ead565b909155505063ffffffff8116612638856125ec88612ae1565b6001600160e01b031661264b9190612ed3565b600c600082825461265c9190612ead565b90915550505b6009805463ffffffff8416600160e01b026001600160e01b036001600160701b038a8116600160701b9081026001600160e01b03199095168d83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a150505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166000908152600160205260409020546127809082612469565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546127af9082612b0f565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906127509085815260200190565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015612859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061287d9190612f7f565b600d546001600160a01b03821615801594509192509061292c5780156129275760006128b86114fe6001600160701b03888116908816612402565b905060006128c583612940565b9050808211156129245760006128e76128de8484612469565b60005490612402565b90506000612900836128fa866005612402565b90612b0f565b9050600061290e8284612f00565b905080156129205761292087826129b0565b5050505b50505b612938565b8015612938576000600d555b505092915050565b600060038211156129a1575080600061295a600283612f00565b612965906001612ead565b90505b8181101561299b579050806002816129808186612f00565b61298a9190612ead565b6129949190612f00565b9050612968565b50919050565b81156129ab575060015b919050565b6000546129bd9082612b0f565b60009081556001600160a01b0383168152600160205260409020546129e29082612b0f565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612a339085815260200190565b60405180910390a35050565b6000818310612a4e5781612a50565b825b9392505050565b6001600160a01b038216600090815260016020526040902054612a7a9082612469565b6001600160a01b03831660009081526001602052604081209190915554612aa19082612469565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001612a33565b6000610ed6600160701b6001600160701b038416612f9c565b6000612a506001600160701b03831684612fce565b600082612b1c8382612ead565b9150811015610ed65760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b6044820152606401610934565b6001600160a01b0381168114612b7957600080fd5b50565b600080600080600060808688031215612b9457600080fd5b85359450602086013593506040860135612bad81612b64565b9250606086013567ffffffffffffffff80821115612bca57600080fd5b818801915088601f830112612bde57600080fd5b813581811115612bed57600080fd5b896020828501011115612bff57600080fd5b9699959850939650602001949392505050565b60005b83811015612c2d578181015183820152602001612c15565b50506000910152565b6020815260008251806020840152612c55816040850160208701612c12565b601f01601f19169190910160400192915050565b60008060408385031215612c7c57600080fd5b8235612c8781612b64565b946020939093013593505050565b600080600060608486031215612caa57600080fd5b8335612cb581612b64565b92506020840135612cc581612b64565b929592945050506040919091013590565b600060208284031215612ce857600080fd5b5035919050565b600060208284031215612d0157600080fd5b8135612a5081612b64565b600080600060608486031215612d2157600080fd5b8335612d2c81612b64565b92506020840135612d3c81612b64565b91506040840135612d4c81612b64565b809150509250925092565b600080600080600080600060e0888a031215612d7257600080fd5b8735612d7d81612b64565b96506020880135612d8d81612b64565b95506040880135945060608801359350608088013560ff81168114612db157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215612de157600080fd5b8235612dec81612b64565b91506020830135612dfc81612b64565b809150509250929050565b602080825260119082015270155b9a5cddd85c158c8e881313d0d2d151607a1b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b600060208284031215612e9057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610ed657610ed6612e97565b81810381811115610ed657610ed6612e97565b8082028115828204841417610ed657610ed6612e97565b634e487b7160e01b600052601260045260246000fd5b600082612f0f57612f0f612eea565b500490565b600060018201612f2657612f26612e97565b5060010190565b60008251612f3f818460208701612c12565b9190910192915050565b600060208284031215612f5b57600080fd5b81518015158114612a5057600080fd5b600082612f7a57612f7a612eea565b500690565b600060208284031215612f9157600080fd5b8151612a5081612b64565b6001600160e01b03828116828216818102831692918115828504821417612fc557612fc5612e97565b50505092915050565b60006001600160e01b0383811680612fe857612fe8612eea565b9216919091049291505056fea164736f6c6343000811000a";

type PairConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PairConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pair__factory extends ContractFactory {
  constructor(...args: PairConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Pair> {
    return super.deploy(overrides || {}) as Promise<Pair>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Pair {
    return super.attach(address) as Pair;
  }
  override connect(signer: Signer): Pair__factory {
    return super.connect(signer) as Pair__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PairInterface {
    return new utils.Interface(_abi) as PairInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Pair {
    return new Contract(address, _abi, signerOrProvider) as Pair;
  }
}
