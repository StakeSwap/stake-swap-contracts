/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Constants, ConstantsInterface } from "../../../src/lib/Constants";

const _abi = [
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_rETH_ETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_frxETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_stETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610858908161001c8239f35b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c8063020b627d146101a357806323c34a64146102d15780634aa07e64146102b55780634bc0dcb614610299578063565d3e6e1461027d5780635a33bbbe14610202578063698e07961461026157806389a3027114610245578063aa6430c614610229578063ad5c46481461020d578063be78e8d914610202578063c1fe3e48146101e6578063c9ac8c8e146101ca578063ca8aa0e4146101ae578063cbc74de7146101a3578063ce06961414610187578063e0bab4c41461016b578063ebdfda5e1461014f578063f2cd3a121461012c5763f781b24e146100fc575b600080fd5b34610128578160031936011261012857602090610117610812565b90516001600160a01b039091168152f35b5080fd5b5034610128578160031936011261012857602090610148610691565b9051908152f35b50346101285781600319360112610128576020906101176105b6565b50346101285781600319360112610128576020906101176103b8565b5034610128578160031936011261012857602090610117610650565b5050506100f76102ed565b503461012857816003193601126101285760209061011761060f565b5034610128578160031936011261012857602090610117610575565b503461012857816003193601126101285760209061011761046a565b5050506100f7610314565b503461012857816003193601126101285760209061011761035b565b50346101285781600319360112610128576020906101176107d9565b5034610128578160031936011261012857602090610117610411565b50346101285781600319360112610128576020906101176107a0565b503461012857816003193601126101285760209061011761051c565b503461012857816003193601126101285760209061011761071b565b50346101285781600319360112610128576020906101176104c3565b50346101285781600319360112610128576020906101486106d6565b50346100f75760003660031901126100f757602061030961077a565b60405190600f0b8152f35b50346100f75760003660031901126100f7576020610309610754565b60609060208152601060208201526f1d5b9adb9bdddb8818da185a5b881a5960821b60408201520190565b600146146103a057600546146103885760405162461bcd60e51b81528061038460048201610330565b0390fd5b73b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b600146146103f957600546146103e15760405162461bcd60e51b81528061038460048201610330565b7373967c6a0904aa032c103b4104747e88c566b1a290565b736b175474e89094c44da98b954eedeac495271d0f90565b60014614610452576005461461043a5760405162461bcd60e51b81528061038460048201610330565b732f3a40a3db8a7e3d09b0adfefbce4f6f8192755790565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4890565b600146146104ab57600546146104935760405162461bcd60e51b81528061038460048201610330565b731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b73ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b6001461461050457600546146104ec5760405162461bcd60e51b81528061038460048201610330565b736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b6001461461055d57600546146105455760405162461bcd60e51b81528061038460048201610330565b733e04888b1c07a9805861c19551f7ed53145bd8d490565b735e8422345238f34275888049021821e8e08caa1f90565b6001461461059e57600546146105455760405162461bcd60e51b81528061038460048201610330565b73ac3e018457b222d93114458476f3e3416abbe38f90565b600146146105f757600546146105df5760405162461bcd60e51b81528061038460048201610330565b736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b73bafa44efe7901e04e39dad13167d089c559c113890565b6001461461063857600546146106385760405162461bcd60e51b81528061038460048201610330565b73ae78736cd615f374d3085123a210448e74fc639390565b6001461461067957600546146106795760405162461bcd60e51b81528061038460048201610330565b73ba12222222228d8ba445958a75a0704d566bf2c890565b600146146106b25760405162461bcd60e51b81528061038460048201610330565b7f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b600146146106f75760405162461bcd60e51b81528061038460048201610330565b7f1e19cf2d73a72ef1332c882f20534b6519be027600020000000000000000011290565b6001461461073c5760405162461bcd60e51b81528061038460048201610330565b73dc24316b9ae028f1497c275eb9192a3ea0f6702290565b600146146107755760405162461bcd60e51b81528061038460048201610330565b600090565b6001461461079b5760405162461bcd60e51b81528061038460048201610330565b600190565b600146146107c15760405162461bcd60e51b81528061038460048201610330565b7306325440d014e39736583c165c2963ba99faf14e90565b600146146107fa5760405162461bcd60e51b81528061038460048201610330565b73a1f8a6807c402e4a15ef4eba36528a3fed24e57790565b600146146108335760405162461bcd60e51b81528061038460048201610330565b73f43211935c781d5ca1a41d2041f397b8a7366c7a9056fea164736f6c6343000811000a";

type ConstantsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConstantsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Constants__factory extends ContractFactory {
  constructor(...args: ConstantsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Constants> {
    return super.deploy(overrides || {}) as Promise<Constants>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Constants {
    return super.attach(address) as Constants;
  }
  override connect(signer: Signer): Constants__factory {
    return super.connect(signer) as Constants__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConstantsInterface {
    return new utils.Interface(_abi) as ConstantsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Constants {
    return new Contract(address, _abi, signerOrProvider) as Constants;
  }
}
